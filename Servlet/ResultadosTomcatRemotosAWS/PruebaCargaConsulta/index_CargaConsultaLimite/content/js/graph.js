/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 92540.0, "series": [{"data": [[0.0, 5.0], [0.1, 8.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 10.0], [0.6, 10.0], [0.7, 10.0], [0.8, 10.0], [0.9, 11.0], [1.0, 11.0], [1.1, 11.0], [1.2, 11.0], [1.3, 12.0], [1.4, 12.0], [1.5, 12.0], [1.6, 12.0], [1.7, 12.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 16.0], [2.8, 16.0], [2.9, 16.0], [3.0, 17.0], [3.1, 17.0], [3.2, 17.0], [3.3, 18.0], [3.4, 18.0], [3.5, 19.0], [3.6, 19.0], [3.7, 20.0], [3.8, 20.0], [3.9, 21.0], [4.0, 21.0], [4.1, 22.0], [4.2, 22.0], [4.3, 23.0], [4.4, 24.0], [4.5, 24.0], [4.6, 25.0], [4.7, 25.0], [4.8, 26.0], [4.9, 27.0], [5.0, 27.0], [5.1, 28.0], [5.2, 29.0], [5.3, 29.0], [5.4, 30.0], [5.5, 31.0], [5.6, 32.0], [5.7, 32.0], [5.8, 33.0], [5.9, 34.0], [6.0, 35.0], [6.1, 35.0], [6.2, 36.0], [6.3, 37.0], [6.4, 38.0], [6.5, 39.0], [6.6, 40.0], [6.7, 41.0], [6.8, 41.0], [6.9, 42.0], [7.0, 43.0], [7.1, 44.0], [7.2, 45.0], [7.3, 45.0], [7.4, 46.0], [7.5, 47.0], [7.6, 48.0], [7.7, 49.0], [7.8, 49.0], [7.9, 50.0], [8.0, 51.0], [8.1, 52.0], [8.2, 53.0], [8.3, 54.0], [8.4, 55.0], [8.5, 56.0], [8.6, 57.0], [8.7, 58.0], [8.8, 58.0], [8.9, 59.0], [9.0, 60.0], [9.1, 61.0], [9.2, 62.0], [9.3, 63.0], [9.4, 64.0], [9.5, 65.0], [9.6, 66.0], [9.7, 67.0], [9.8, 68.0], [9.9, 69.0], [10.0, 70.0], [10.1, 71.0], [10.2, 72.0], [10.3, 73.0], [10.4, 74.0], [10.5, 75.0], [10.6, 76.0], [10.7, 77.0], [10.8, 78.0], [10.9, 79.0], [11.0, 80.0], [11.1, 81.0], [11.2, 82.0], [11.3, 83.0], [11.4, 84.0], [11.5, 85.0], [11.6, 87.0], [11.7, 88.0], [11.8, 89.0], [11.9, 90.0], [12.0, 91.0], [12.1, 92.0], [12.2, 93.0], [12.3, 95.0], [12.4, 96.0], [12.5, 97.0], [12.6, 98.0], [12.7, 99.0], [12.8, 100.0], [12.9, 101.0], [13.0, 102.0], [13.1, 104.0], [13.2, 105.0], [13.3, 106.0], [13.4, 107.0], [13.5, 108.0], [13.6, 109.0], [13.7, 111.0], [13.8, 112.0], [13.9, 113.0], [14.0, 115.0], [14.1, 116.0], [14.2, 117.0], [14.3, 118.0], [14.4, 120.0], [14.5, 121.0], [14.6, 122.0], [14.7, 123.0], [14.8, 124.0], [14.9, 126.0], [15.0, 127.0], [15.1, 128.0], [15.2, 130.0], [15.3, 131.0], [15.4, 132.0], [15.5, 133.0], [15.6, 134.0], [15.7, 136.0], [15.8, 137.0], [15.9, 139.0], [16.0, 140.0], [16.1, 141.0], [16.2, 142.0], [16.3, 144.0], [16.4, 145.0], [16.5, 146.0], [16.6, 147.0], [16.7, 148.0], [16.8, 150.0], [16.9, 151.0], [17.0, 152.0], [17.1, 153.0], [17.2, 155.0], [17.3, 156.0], [17.4, 157.0], [17.5, 158.0], [17.6, 159.0], [17.7, 161.0], [17.8, 162.0], [17.9, 163.0], [18.0, 165.0], [18.1, 166.0], [18.2, 167.0], [18.3, 168.0], [18.4, 170.0], [18.5, 171.0], [18.6, 172.0], [18.7, 174.0], [18.8, 175.0], [18.9, 176.0], [19.0, 177.0], [19.1, 178.0], [19.2, 179.0], [19.3, 181.0], [19.4, 182.0], [19.5, 183.0], [19.6, 184.0], [19.7, 186.0], [19.8, 187.0], [19.9, 188.0], [20.0, 189.0], [20.1, 190.0], [20.2, 192.0], [20.3, 193.0], [20.4, 194.0], [20.5, 195.0], [20.6, 197.0], [20.7, 198.0], [20.8, 199.0], [20.9, 200.0], [21.0, 202.0], [21.1, 203.0], [21.2, 204.0], [21.3, 206.0], [21.4, 207.0], [21.5, 208.0], [21.6, 209.0], [21.7, 210.0], [21.8, 212.0], [21.9, 213.0], [22.0, 214.0], [22.1, 215.0], [22.2, 216.0], [22.3, 218.0], [22.4, 219.0], [22.5, 220.0], [22.6, 221.0], [22.7, 223.0], [22.8, 224.0], [22.9, 225.0], [23.0, 226.0], [23.1, 227.0], [23.2, 229.0], [23.3, 230.0], [23.4, 231.0], [23.5, 232.0], [23.6, 234.0], [23.7, 235.0], [23.8, 236.0], [23.9, 237.0], [24.0, 238.0], [24.1, 240.0], [24.2, 241.0], [24.3, 242.0], [24.4, 243.0], [24.5, 244.0], [24.6, 245.0], [24.7, 247.0], [24.8, 248.0], [24.9, 249.0], [25.0, 250.0], [25.1, 251.0], [25.2, 253.0], [25.3, 254.0], [25.4, 255.0], [25.5, 256.0], [25.6, 258.0], [25.7, 259.0], [25.8, 260.0], [25.9, 261.0], [26.0, 262.0], [26.1, 263.0], [26.2, 265.0], [26.3, 266.0], [26.4, 267.0], [26.5, 268.0], [26.6, 269.0], [26.7, 270.0], [26.8, 271.0], [26.9, 273.0], [27.0, 274.0], [27.1, 275.0], [27.2, 276.0], [27.3, 277.0], [27.4, 279.0], [27.5, 280.0], [27.6, 281.0], [27.7, 282.0], [27.8, 283.0], [27.9, 284.0], [28.0, 285.0], [28.1, 286.0], [28.2, 288.0], [28.3, 289.0], [28.4, 290.0], [28.5, 291.0], [28.6, 293.0], [28.7, 294.0], [28.8, 295.0], [28.9, 296.0], [29.0, 298.0], [29.1, 299.0], [29.2, 300.0], [29.3, 302.0], [29.4, 303.0], [29.5, 304.0], [29.6, 305.0], [29.7, 307.0], [29.8, 308.0], [29.9, 309.0], [30.0, 310.0], [30.1, 311.0], [30.2, 313.0], [30.3, 314.0], [30.4, 315.0], [30.5, 316.0], [30.6, 317.0], [30.7, 319.0], [30.8, 320.0], [30.9, 321.0], [31.0, 323.0], [31.1, 324.0], [31.2, 325.0], [31.3, 326.0], [31.4, 328.0], [31.5, 329.0], [31.6, 330.0], [31.7, 332.0], [31.8, 333.0], [31.9, 334.0], [32.0, 336.0], [32.1, 337.0], [32.2, 338.0], [32.3, 339.0], [32.4, 340.0], [32.5, 342.0], [32.6, 343.0], [32.7, 344.0], [32.8, 345.0], [32.9, 347.0], [33.0, 348.0], [33.1, 349.0], [33.2, 350.0], [33.3, 352.0], [33.4, 353.0], [33.5, 354.0], [33.6, 355.0], [33.7, 356.0], [33.8, 358.0], [33.9, 359.0], [34.0, 360.0], [34.1, 361.0], [34.2, 362.0], [34.3, 364.0], [34.4, 365.0], [34.5, 366.0], [34.6, 368.0], [34.7, 369.0], [34.8, 370.0], [34.9, 372.0], [35.0, 373.0], [35.1, 374.0], [35.2, 376.0], [35.3, 377.0], [35.4, 379.0], [35.5, 380.0], [35.6, 381.0], [35.7, 382.0], [35.8, 384.0], [35.9, 385.0], [36.0, 387.0], [36.1, 388.0], [36.2, 389.0], [36.3, 391.0], [36.4, 392.0], [36.5, 393.0], [36.6, 394.0], [36.7, 396.0], [36.8, 397.0], [36.9, 398.0], [37.0, 400.0], [37.1, 401.0], [37.2, 402.0], [37.3, 403.0], [37.4, 405.0], [37.5, 406.0], [37.6, 407.0], [37.7, 409.0], [37.8, 410.0], [37.9, 411.0], [38.0, 412.0], [38.1, 414.0], [38.2, 415.0], [38.3, 416.0], [38.4, 418.0], [38.5, 419.0], [38.6, 421.0], [38.7, 422.0], [38.8, 423.0], [38.9, 425.0], [39.0, 426.0], [39.1, 428.0], [39.2, 429.0], [39.3, 430.0], [39.4, 432.0], [39.5, 433.0], [39.6, 434.0], [39.7, 436.0], [39.8, 437.0], [39.9, 439.0], [40.0, 440.0], [40.1, 441.0], [40.2, 443.0], [40.3, 444.0], [40.4, 445.0], [40.5, 447.0], [40.6, 448.0], [40.7, 449.0], [40.8, 451.0], [40.9, 452.0], [41.0, 454.0], [41.1, 455.0], [41.2, 457.0], [41.3, 459.0], [41.4, 460.0], [41.5, 462.0], [41.6, 463.0], [41.7, 465.0], [41.8, 466.0], [41.9, 468.0], [42.0, 469.0], [42.1, 470.0], [42.2, 472.0], [42.3, 473.0], [42.4, 475.0], [42.5, 476.0], [42.6, 477.0], [42.7, 479.0], [42.8, 480.0], [42.9, 482.0], [43.0, 483.0], [43.1, 485.0], [43.2, 486.0], [43.3, 487.0], [43.4, 489.0], [43.5, 490.0], [43.6, 491.0], [43.7, 493.0], [43.8, 494.0], [43.9, 496.0], [44.0, 497.0], [44.1, 499.0], [44.2, 500.0], [44.3, 502.0], [44.4, 503.0], [44.5, 504.0], [44.6, 506.0], [44.7, 508.0], [44.8, 509.0], [44.9, 511.0], [45.0, 512.0], [45.1, 514.0], [45.2, 515.0], [45.3, 517.0], [45.4, 518.0], [45.5, 520.0], [45.6, 521.0], [45.7, 523.0], [45.8, 524.0], [45.9, 526.0], [46.0, 527.0], [46.1, 529.0], [46.2, 531.0], [46.3, 532.0], [46.4, 534.0], [46.5, 536.0], [46.6, 537.0], [46.7, 539.0], [46.8, 541.0], [46.9, 542.0], [47.0, 544.0], [47.1, 545.0], [47.2, 547.0], [47.3, 549.0], [47.4, 551.0], [47.5, 552.0], [47.6, 554.0], [47.7, 556.0], [47.8, 557.0], [47.9, 559.0], [48.0, 561.0], [48.1, 563.0], [48.2, 564.0], [48.3, 566.0], [48.4, 568.0], [48.5, 569.0], [48.6, 571.0], [48.7, 573.0], [48.8, 575.0], [48.9, 576.0], [49.0, 578.0], [49.1, 580.0], [49.2, 582.0], [49.3, 583.0], [49.4, 585.0], [49.5, 587.0], [49.6, 589.0], [49.7, 590.0], [49.8, 592.0], [49.9, 594.0], [50.0, 596.0], [50.1, 597.0], [50.2, 599.0], [50.3, 601.0], [50.4, 602.0], [50.5, 604.0], [50.6, 605.0], [50.7, 607.0], [50.8, 609.0], [50.9, 611.0], [51.0, 613.0], [51.1, 614.0], [51.2, 616.0], [51.3, 617.0], [51.4, 619.0], [51.5, 621.0], [51.6, 623.0], [51.7, 624.0], [51.8, 626.0], [51.9, 628.0], [52.0, 631.0], [52.1, 632.0], [52.2, 634.0], [52.3, 636.0], [52.4, 638.0], [52.5, 640.0], [52.6, 642.0], [52.7, 644.0], [52.8, 645.0], [52.9, 648.0], [53.0, 649.0], [53.1, 651.0], [53.2, 653.0], [53.3, 655.0], [53.4, 657.0], [53.5, 659.0], [53.6, 660.0], [53.7, 662.0], [53.8, 664.0], [53.9, 666.0], [54.0, 668.0], [54.1, 670.0], [54.2, 672.0], [54.3, 674.0], [54.4, 676.0], [54.5, 678.0], [54.6, 680.0], [54.7, 682.0], [54.8, 684.0], [54.9, 686.0], [55.0, 688.0], [55.1, 690.0], [55.2, 692.0], [55.3, 694.0], [55.4, 697.0], [55.5, 699.0], [55.6, 701.0], [55.7, 703.0], [55.8, 705.0], [55.9, 708.0], [56.0, 710.0], [56.1, 712.0], [56.2, 714.0], [56.3, 716.0], [56.4, 718.0], [56.5, 721.0], [56.6, 723.0], [56.7, 725.0], [56.8, 727.0], [56.9, 730.0], [57.0, 732.0], [57.1, 734.0], [57.2, 736.0], [57.3, 737.0], [57.4, 740.0], [57.5, 741.0], [57.6, 744.0], [57.7, 746.0], [57.8, 748.0], [57.9, 750.0], [58.0, 753.0], [58.1, 755.0], [58.2, 757.0], [58.3, 759.0], [58.4, 761.0], [58.5, 763.0], [58.6, 766.0], [58.7, 768.0], [58.8, 769.0], [58.9, 772.0], [59.0, 774.0], [59.1, 776.0], [59.2, 779.0], [59.3, 781.0], [59.4, 783.0], [59.5, 785.0], [59.6, 787.0], [59.7, 790.0], [59.8, 792.0], [59.9, 795.0], [60.0, 797.0], [60.1, 799.0], [60.2, 802.0], [60.3, 804.0], [60.4, 807.0], [60.5, 809.0], [60.6, 811.0], [60.7, 814.0], [60.8, 816.0], [60.9, 819.0], [61.0, 822.0], [61.1, 824.0], [61.2, 826.0], [61.3, 829.0], [61.4, 831.0], [61.5, 834.0], [61.6, 836.0], [61.7, 839.0], [61.8, 841.0], [61.9, 844.0], [62.0, 847.0], [62.1, 849.0], [62.2, 852.0], [62.3, 855.0], [62.4, 857.0], [62.5, 860.0], [62.6, 863.0], [62.7, 866.0], [62.8, 869.0], [62.9, 871.0], [63.0, 874.0], [63.1, 877.0], [63.2, 880.0], [63.3, 883.0], [63.4, 885.0], [63.5, 888.0], [63.6, 891.0], [63.7, 894.0], [63.8, 896.0], [63.9, 899.0], [64.0, 903.0], [64.1, 905.0], [64.2, 908.0], [64.3, 911.0], [64.4, 914.0], [64.5, 917.0], [64.6, 920.0], [64.7, 923.0], [64.8, 926.0], [64.9, 929.0], [65.0, 932.0], [65.1, 935.0], [65.2, 938.0], [65.3, 941.0], [65.4, 944.0], [65.5, 947.0], [65.6, 950.0], [65.7, 953.0], [65.8, 957.0], [65.9, 960.0], [66.0, 964.0], [66.1, 966.0], [66.2, 969.0], [66.3, 972.0], [66.4, 975.0], [66.5, 979.0], [66.6, 982.0], [66.7, 985.0], [66.8, 989.0], [66.9, 992.0], [67.0, 995.0], [67.1, 998.0], [67.2, 1001.0], [67.3, 1004.0], [67.4, 1007.0], [67.5, 1010.0], [67.6, 1013.0], [67.7, 1016.0], [67.8, 1019.0], [67.9, 1022.0], [68.0, 1026.0], [68.1, 1029.0], [68.2, 1033.0], [68.3, 1036.0], [68.4, 1039.0], [68.5, 1043.0], [68.6, 1046.0], [68.7, 1050.0], [68.8, 1053.0], [68.9, 1057.0], [69.0, 1060.0], [69.1, 1064.0], [69.2, 1068.0], [69.3, 1072.0], [69.4, 1076.0], [69.5, 1079.0], [69.6, 1082.0], [69.7, 1086.0], [69.8, 1090.0], [69.9, 1093.0], [70.0, 1097.0], [70.1, 1101.0], [70.2, 1105.0], [70.3, 1109.0], [70.4, 1113.0], [70.5, 1117.0], [70.6, 1121.0], [70.7, 1125.0], [70.8, 1129.0], [70.9, 1132.0], [71.0, 1136.0], [71.1, 1141.0], [71.2, 1145.0], [71.3, 1149.0], [71.4, 1154.0], [71.5, 1158.0], [71.6, 1161.0], [71.7, 1165.0], [71.8, 1170.0], [71.9, 1174.0], [72.0, 1178.0], [72.1, 1182.0], [72.2, 1187.0], [72.3, 1192.0], [72.4, 1197.0], [72.5, 1202.0], [72.6, 1207.0], [72.7, 1212.0], [72.8, 1216.0], [72.9, 1220.0], [73.0, 1224.0], [73.1, 1228.0], [73.2, 1232.0], [73.3, 1237.0], [73.4, 1241.0], [73.5, 1245.0], [73.6, 1250.0], [73.7, 1255.0], [73.8, 1259.0], [73.9, 1264.0], [74.0, 1268.0], [74.1, 1273.0], [74.2, 1277.0], [74.3, 1282.0], [74.4, 1287.0], [74.5, 1292.0], [74.6, 1296.0], [74.7, 1301.0], [74.8, 1306.0], [74.9, 1311.0], [75.0, 1315.0], [75.1, 1320.0], [75.2, 1324.0], [75.3, 1329.0], [75.4, 1335.0], [75.5, 1340.0], [75.6, 1345.0], [75.7, 1350.0], [75.8, 1355.0], [75.9, 1359.0], [76.0, 1365.0], [76.1, 1370.0], [76.2, 1376.0], [76.3, 1382.0], [76.4, 1387.0], [76.5, 1392.0], [76.6, 1398.0], [76.7, 1403.0], [76.8, 1408.0], [76.9, 1413.0], [77.0, 1419.0], [77.1, 1424.0], [77.2, 1430.0], [77.3, 1436.0], [77.4, 1441.0], [77.5, 1447.0], [77.6, 1453.0], [77.7, 1459.0], [77.8, 1465.0], [77.9, 1472.0], [78.0, 1479.0], [78.1, 1485.0], [78.2, 1491.0], [78.3, 1497.0], [78.4, 1504.0], [78.5, 1511.0], [78.6, 1517.0], [78.7, 1525.0], [78.8, 1531.0], [78.9, 1538.0], [79.0, 1545.0], [79.1, 1552.0], [79.2, 1558.0], [79.3, 1565.0], [79.4, 1572.0], [79.5, 1578.0], [79.6, 1585.0], [79.7, 1592.0], [79.8, 1599.0], [79.9, 1606.0], [80.0, 1613.0], [80.1, 1620.0], [80.2, 1627.0], [80.3, 1634.0], [80.4, 1640.0], [80.5, 1648.0], [80.6, 1655.0], [80.7, 1662.0], [80.8, 1669.0], [80.9, 1675.0], [81.0, 1683.0], [81.1, 1690.0], [81.2, 1697.0], [81.3, 1704.0], [81.4, 1711.0], [81.5, 1718.0], [81.6, 1725.0], [81.7, 1733.0], [81.8, 1740.0], [81.9, 1747.0], [82.0, 1754.0], [82.1, 1761.0], [82.2, 1769.0], [82.3, 1777.0], [82.4, 1786.0], [82.5, 1796.0], [82.6, 1804.0], [82.7, 1812.0], [82.8, 1821.0], [82.9, 1830.0], [83.0, 1838.0], [83.1, 1846.0], [83.2, 1854.0], [83.3, 1862.0], [83.4, 1870.0], [83.5, 1881.0], [83.6, 1889.0], [83.7, 1898.0], [83.8, 1907.0], [83.9, 1916.0], [84.0, 1926.0], [84.1, 1936.0], [84.2, 1947.0], [84.3, 1957.0], [84.4, 1970.0], [84.5, 1980.0], [84.6, 1992.0], [84.7, 2003.0], [84.8, 2014.0], [84.9, 2027.0], [85.0, 2039.0], [85.1, 2051.0], [85.2, 2065.0], [85.3, 2078.0], [85.4, 2089.0], [85.5, 2102.0], [85.6, 2116.0], [85.7, 2128.0], [85.8, 2141.0], [85.9, 2154.0], [86.0, 2167.0], [86.1, 2181.0], [86.2, 2195.0], [86.3, 2211.0], [86.4, 2227.0], [86.5, 2241.0], [86.6, 2255.0], [86.7, 2272.0], [86.8, 2288.0], [86.9, 2305.0], [87.0, 2319.0], [87.1, 2336.0], [87.2, 2353.0], [87.3, 2372.0], [87.4, 2392.0], [87.5, 2411.0], [87.6, 2432.0], [87.7, 2453.0], [87.8, 2471.0], [87.9, 2493.0], [88.0, 2515.0], [88.1, 2538.0], [88.2, 2561.0], [88.3, 2586.0], [88.4, 2611.0], [88.5, 2636.0], [88.6, 2664.0], [88.7, 2690.0], [88.8, 2717.0], [88.9, 2745.0], [89.0, 2780.0], [89.1, 2812.0], [89.2, 2850.0], [89.3, 2894.0], [89.4, 2940.0], [89.5, 2992.0], [89.6, 3039.0], [89.7, 3089.0], [89.8, 3141.0], [89.9, 3205.0], [90.0, 3269.0], [90.1, 3344.0], [90.2, 3423.0], [90.3, 3494.0], [90.4, 3556.0], [90.5, 3647.0], [90.6, 3746.0], [90.7, 3843.0], [90.8, 3946.0], [90.9, 4031.0], [91.0, 4111.0], [91.1, 4183.0], [91.2, 4258.0], [91.3, 4333.0], [91.4, 4410.0], [91.5, 4493.0], [91.6, 4564.0], [91.7, 4636.0], [91.8, 4707.0], [91.9, 4795.0], [92.0, 4860.0], [92.1, 4918.0], [92.2, 4992.0], [92.3, 5060.0], [92.4, 5151.0], [92.5, 5237.0], [92.6, 5333.0], [92.7, 5423.0], [92.8, 5504.0], [92.9, 5590.0], [93.0, 5690.0], [93.1, 5790.0], [93.2, 5876.0], [93.3, 5980.0], [93.4, 6124.0], [93.5, 6298.0], [93.6, 6414.0], [93.7, 6554.0], [93.8, 6703.0], [93.9, 6847.0], [94.0, 6993.0], [94.1, 7097.0], [94.2, 7260.0], [94.3, 7444.0], [94.4, 7627.0], [94.5, 7814.0], [94.6, 7998.0], [94.7, 8176.0], [94.8, 8462.0], [94.9, 8776.0], [95.0, 9069.0], [95.1, 9494.0], [95.2, 9766.0], [95.3, 9933.0], [95.4, 10186.0], [95.5, 10462.0], [95.6, 10632.0], [95.7, 10830.0], [95.8, 10972.0], [95.9, 11209.0], [96.0, 11423.0], [96.1, 11750.0], [96.2, 12046.0], [96.3, 12334.0], [96.4, 12763.0], [96.5, 13185.0], [96.6, 13646.0], [96.7, 14091.0], [96.8, 14392.0], [96.9, 14598.0], [97.0, 15010.0], [97.1, 15261.0], [97.2, 15454.0], [97.3, 15781.0], [97.4, 16148.0], [97.5, 16444.0], [97.6, 16797.0], [97.7, 17245.0], [97.8, 17692.0], [97.9, 18334.0], [98.0, 18784.0], [98.1, 19139.0], [98.2, 19559.0], [98.3, 19939.0], [98.4, 20409.0], [98.5, 20901.0], [98.6, 21324.0], [98.7, 21736.0], [98.8, 22702.0], [98.9, 23412.0], [99.0, 24058.0], [99.1, 25026.0], [99.2, 26164.0], [99.3, 27407.0], [99.4, 29004.0], [99.5, 30884.0], [99.6, 33032.0], [99.7, 39354.0], [99.8, 50609.0], [99.9, 71066.0], [100.0, 92540.0]], "isOverall": false, "label": "Petición HTTP", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 17300.0, "series": [{"data": [[0.0, 17300.0], [68300.0, 1.0], [69900.0, 1.0], [71500.0, 1.0], [76300.0, 1.0], [77900.0, 1.0], [81100.0, 4.0], [82700.0, 3.0], [100.0, 10989.0], [34500.0, 2.0], [32900.0, 6.0], [33700.0, 3.0], [36100.0, 3.0], [35300.0, 4.0], [39300.0, 1.0], [40900.0, 2.0], [42500.0, 2.0], [41700.0, 1.0], [49700.0, 4.0], [50500.0, 5.0], [200.0, 11257.0], [51300.0, 1.0], [52100.0, 1.0], [55300.0, 1.0], [57700.0, 1.0], [63300.0, 1.0], [67400.0, 1.0], [69000.0, 1.0], [70600.0, 1.0], [300.0, 10653.0], [77000.0, 1.0], [73800.0, 2.0], [80200.0, 3.0], [81800.0, 1.0], [83400.0, 3.0], [86600.0, 1.0], [400.0, 9785.0], [500.0, 8228.0], [600.0, 7189.0], [700.0, 6234.0], [800.0, 5151.0], [900.0, 4404.0], [1000.0, 3954.0], [1100.0, 3263.0], [1200.0, 2987.0], [1300.0, 2687.0], [1400.0, 2304.0], [1500.0, 1994.0], [1600.0, 1950.0], [1700.0, 1762.0], [1800.0, 1596.0], [1900.0, 1303.0], [2000.0, 1102.0], [2100.0, 1018.0], [2200.0, 870.0], [2300.0, 765.0], [2400.0, 673.0], [2500.0, 573.0], [2600.0, 513.0], [2800.0, 339.0], [2700.0, 450.0], [2900.0, 277.0], [3000.0, 276.0], [3100.0, 237.0], [3200.0, 201.0], [3300.0, 175.0], [3400.0, 186.0], [3500.0, 188.0], [3700.0, 157.0], [3600.0, 140.0], [3800.0, 142.0], [3900.0, 114.0], [4000.0, 185.0], [4200.0, 171.0], [4300.0, 192.0], [4100.0, 183.0], [66500.0, 1.0], [4600.0, 189.0], [4400.0, 158.0], [4500.0, 192.0], [71300.0, 2.0], [4700.0, 162.0], [4800.0, 218.0], [74500.0, 1.0], [76100.0, 1.0], [77700.0, 1.0], [4900.0, 195.0], [5000.0, 179.0], [5100.0, 158.0], [79300.0, 2.0], [80900.0, 2.0], [5200.0, 146.0], [5300.0, 145.0], [85700.0, 1.0], [82500.0, 1.0], [5400.0, 156.0], [5500.0, 164.0], [5600.0, 139.0], [5700.0, 130.0], [5800.0, 161.0], [5900.0, 116.0], [6000.0, 86.0], [6100.0, 90.0], [6300.0, 116.0], [6200.0, 80.0], [6400.0, 93.0], [6600.0, 84.0], [6500.0, 108.0], [6700.0, 109.0], [6800.0, 73.0], [6900.0, 102.0], [7100.0, 83.0], [7000.0, 132.0], [7200.0, 82.0], [7300.0, 63.0], [7400.0, 70.0], [7500.0, 85.0], [7600.0, 67.0], [7700.0, 78.0], [7800.0, 80.0], [7900.0, 70.0], [8000.0, 81.0], [8100.0, 71.0], [8600.0, 41.0], [8400.0, 47.0], [8200.0, 53.0], [8800.0, 56.0], [9000.0, 37.0], [9200.0, 31.0], [9400.0, 37.0], [9600.0, 59.0], [10200.0, 47.0], [9800.0, 86.0], [10000.0, 60.0], [10400.0, 62.0], [10600.0, 61.0], [10800.0, 93.0], [11000.0, 61.0], [11200.0, 62.0], [11600.0, 41.0], [11400.0, 51.0], [11800.0, 37.0], [12000.0, 50.0], [12200.0, 49.0], [12400.0, 41.0], [12600.0, 19.0], [12800.0, 21.0], [13000.0, 40.0], [13200.0, 29.0], [13400.0, 21.0], [13800.0, 19.0], [13600.0, 59.0], [14000.0, 47.0], [14200.0, 47.0], [14400.0, 63.0], [14600.0, 46.0], [14800.0, 26.0], [15000.0, 62.0], [15200.0, 45.0], [15600.0, 33.0], [15400.0, 79.0], [15800.0, 40.0], [16200.0, 52.0], [16000.0, 41.0], [16400.0, 50.0], [16800.0, 28.0], [17200.0, 23.0], [17600.0, 20.0], [18000.0, 22.0], [18400.0, 28.0], [18800.0, 41.0], [19200.0, 45.0], [19600.0, 35.0], [20000.0, 40.0], [20400.0, 12.0], [20800.0, 32.0], [21200.0, 31.0], [22400.0, 7.0], [21600.0, 27.0], [22000.0, 19.0], [22800.0, 6.0], [23200.0, 18.0], [24000.0, 23.0], [23600.0, 20.0], [24400.0, 8.0], [24800.0, 28.0], [25200.0, 12.0], [25600.0, 8.0], [26000.0, 12.0], [26400.0, 7.0], [26800.0, 14.0], [27600.0, 8.0], [27200.0, 12.0], [28400.0, 6.0], [28000.0, 8.0], [29600.0, 10.0], [28800.0, 6.0], [29200.0, 11.0], [30000.0, 7.0], [30400.0, 7.0], [30800.0, 9.0], [31600.0, 2.0], [31200.0, 9.0], [32000.0, 6.0], [32400.0, 4.0], [34400.0, 4.0], [33600.0, 1.0], [32800.0, 1.0], [35200.0, 2.0], [36000.0, 1.0], [38400.0, 2.0], [37600.0, 1.0], [39200.0, 1.0], [40000.0, 3.0], [40800.0, 1.0], [41600.0, 1.0], [43200.0, 1.0], [48000.0, 1.0], [49600.0, 1.0], [50400.0, 2.0], [52800.0, 1.0], [55200.0, 8.0], [56000.0, 4.0], [57600.0, 11.0], [58400.0, 2.0], [59200.0, 2.0], [61600.0, 1.0], [73600.0, 1.0], [72000.0, 4.0], [76800.0, 2.0], [81600.0, 1.0], [83200.0, 1.0], [84800.0, 1.0], [73500.0, 4.0], [78300.0, 1.0], [81500.0, 1.0], [86300.0, 2.0], [33100.0, 4.0], [33900.0, 3.0], [34700.0, 3.0], [35500.0, 1.0], [37100.0, 2.0], [37900.0, 1.0], [39500.0, 1.0], [42700.0, 3.0], [41100.0, 3.0], [41900.0, 2.0], [44300.0, 1.0], [46700.0, 1.0], [49100.0, 19.0], [49900.0, 2.0], [50700.0, 1.0], [51500.0, 2.0], [52300.0, 1.0], [53100.0, 1.0], [55500.0, 8.0], [57900.0, 1.0], [58700.0, 1.0], [60300.0, 1.0], [71000.0, 1.0], [77400.0, 1.0], [82200.0, 3.0], [91800.0, 1.0], [73300.0, 2.0], [78100.0, 1.0], [82900.0, 3.0], [92500.0, 1.0], [16900.0, 40.0], [16500.0, 45.0], [17300.0, 32.0], [17700.0, 29.0], [18100.0, 17.0], [18500.0, 26.0], [18900.0, 31.0], [19300.0, 18.0], [19700.0, 41.0], [20100.0, 35.0], [20500.0, 33.0], [20900.0, 31.0], [21300.0, 42.0], [22100.0, 17.0], [22500.0, 18.0], [21700.0, 17.0], [22900.0, 17.0], [23300.0, 31.0], [24100.0, 17.0], [24500.0, 7.0], [23700.0, 17.0], [24900.0, 16.0], [25300.0, 15.0], [26100.0, 21.0], [25700.0, 14.0], [26500.0, 9.0], [27300.0, 7.0], [26900.0, 11.0], [28100.0, 12.0], [28500.0, 7.0], [27700.0, 15.0], [29300.0, 11.0], [28900.0, 1.0], [30100.0, 5.0], [29700.0, 6.0], [30500.0, 3.0], [30900.0, 18.0], [31700.0, 8.0], [31300.0, 7.0], [32100.0, 7.0], [32500.0, 1.0], [33800.0, 5.0], [33000.0, 7.0], [34600.0, 2.0], [35400.0, 6.0], [42600.0, 1.0], [41000.0, 5.0], [49000.0, 4.0], [49800.0, 6.0], [50600.0, 3.0], [51400.0, 3.0], [52200.0, 1.0], [53000.0, 1.0], [55400.0, 3.0], [56200.0, 1.0], [57800.0, 1.0], [58600.0, 2.0], [59400.0, 1.0], [65000.0, 1.0], [69200.0, 1.0], [70800.0, 1.0], [82000.0, 1.0], [85200.0, 2.0], [69100.0, 3.0], [67500.0, 1.0], [77100.0, 1.0], [73900.0, 2.0], [81900.0, 1.0], [83500.0, 1.0], [33300.0, 7.0], [34100.0, 9.0], [36500.0, 1.0], [34900.0, 3.0], [35700.0, 2.0], [38100.0, 1.0], [38900.0, 4.0], [37300.0, 1.0], [39700.0, 1.0], [40500.0, 3.0], [42900.0, 2.0], [41300.0, 1.0], [43700.0, 3.0], [44500.0, 1.0], [49300.0, 4.0], [50900.0, 7.0], [52500.0, 3.0], [53300.0, 1.0], [58100.0, 1.0], [65300.0, 1.0], [66600.0, 5.0], [68200.0, 1.0], [71400.0, 2.0], [81000.0, 4.0], [85800.0, 1.0], [82600.0, 4.0], [84200.0, 1.0], [92200.0, 2.0], [67300.0, 2.0], [72100.0, 3.0], [80100.0, 2.0], [83300.0, 1.0], [8300.0, 34.0], [8700.0, 49.0], [8500.0, 36.0], [8900.0, 47.0], [9100.0, 38.0], [9700.0, 74.0], [9500.0, 27.0], [9300.0, 21.0], [9900.0, 64.0], [10100.0, 39.0], [10500.0, 98.0], [10700.0, 67.0], [10300.0, 44.0], [10900.0, 85.0], [11100.0, 52.0], [11500.0, 41.0], [11700.0, 42.0], [11300.0, 66.0], [11900.0, 45.0], [12100.0, 49.0], [12700.0, 16.0], [12300.0, 49.0], [12500.0, 32.0], [12900.0, 45.0], [13100.0, 30.0], [13300.0, 20.0], [13500.0, 30.0], [13700.0, 31.0], [14100.0, 38.0], [13900.0, 13.0], [14300.0, 54.0], [14500.0, 66.0], [14700.0, 34.0], [14900.0, 25.0], [15100.0, 51.0], [15300.0, 68.0], [15700.0, 44.0], [15500.0, 38.0], [15900.0, 26.0], [16100.0, 45.0], [16300.0, 42.0], [16600.0, 42.0], [17000.0, 31.0], [17400.0, 39.0], [17800.0, 25.0], [18200.0, 15.0], [19000.0, 47.0], [19400.0, 34.0], [18600.0, 34.0], [20200.0, 21.0], [19800.0, 30.0], [20600.0, 33.0], [21000.0, 31.0], [21400.0, 35.0], [21800.0, 14.0], [22200.0, 8.0], [22600.0, 9.0], [23000.0, 22.0], [23400.0, 24.0], [24200.0, 11.0], [23800.0, 20.0], [25400.0, 19.0], [24600.0, 10.0], [25000.0, 9.0], [25800.0, 10.0], [26600.0, 10.0], [26200.0, 7.0], [27400.0, 8.0], [27000.0, 9.0], [27800.0, 16.0], [28200.0, 5.0], [28600.0, 3.0], [29000.0, 10.0], [29400.0, 8.0], [30200.0, 6.0], [30600.0, 7.0], [29800.0, 4.0], [31000.0, 8.0], [31400.0, 7.0], [32600.0, 3.0], [32200.0, 8.0], [31800.0, 4.0], [33200.0, 5.0], [34800.0, 4.0], [34000.0, 5.0], [35600.0, 1.0], [38800.0, 1.0], [37200.0, 2.0], [39600.0, 1.0], [40400.0, 4.0], [42800.0, 1.0], [41200.0, 1.0], [42000.0, 2.0], [43600.0, 1.0], [49200.0, 9.0], [50000.0, 2.0], [50800.0, 1.0], [51600.0, 1.0], [58000.0, 3.0], [71200.0, 3.0], [77600.0, 2.0], [80800.0, 5.0], [82400.0, 2.0], [84000.0, 2.0], [71100.0, 1.0], [75900.0, 3.0], [74300.0, 1.0], [80700.0, 1.0], [82300.0, 2.0], [33500.0, 2.0], [34300.0, 4.0], [35900.0, 2.0], [35100.0, 3.0], [38300.0, 1.0], [37500.0, 1.0], [39100.0, 1.0], [39900.0, 1.0], [40700.0, 3.0], [41500.0, 2.0], [43900.0, 1.0], [49500.0, 4.0], [50300.0, 3.0], [51900.0, 1.0], [52700.0, 5.0], [55100.0, 4.0], [56700.0, 1.0], [57500.0, 3.0], [58300.0, 2.0], [67000.0, 2.0], [71800.0, 1.0], [73400.0, 2.0], [76600.0, 1.0], [67700.0, 1.0], [72500.0, 4.0], [82100.0, 6.0], [85300.0, 1.0], [16700.0, 18.0], [17100.0, 29.0], [17500.0, 31.0], [17900.0, 21.0], [18300.0, 23.0], [18700.0, 35.0], [19100.0, 29.0], [19500.0, 36.0], [19900.0, 39.0], [20300.0, 15.0], [21100.0, 33.0], [21500.0, 35.0], [20700.0, 25.0], [21900.0, 22.0], [22300.0, 11.0], [22700.0, 12.0], [23100.0, 27.0], [23500.0, 25.0], [23900.0, 16.0], [24300.0, 14.0], [24700.0, 16.0], [25500.0, 6.0], [25100.0, 11.0], [26300.0, 10.0], [25900.0, 10.0], [27500.0, 13.0], [26700.0, 18.0], [27100.0, 14.0], [27900.0, 20.0], [28300.0, 5.0], [28700.0, 3.0], [29100.0, 8.0], [29500.0, 8.0], [30300.0, 11.0], [29900.0, 3.0], [30700.0, 4.0], [31100.0, 9.0], [31500.0, 9.0], [32300.0, 5.0], [32700.0, 6.0], [31900.0, 4.0], [33400.0, 5.0], [34200.0, 8.0], [36600.0, 1.0], [35800.0, 2.0], [39000.0, 3.0], [40600.0, 5.0], [41400.0, 1.0], [43000.0, 2.0], [49400.0, 5.0], [52600.0, 3.0], [53400.0, 1.0], [55000.0, 3.0], [58200.0, 5.0], [71600.0, 1.0], [76400.0, 1.0], [78000.0, 1.0], [81200.0, 3.0], [79600.0, 1.0], [82800.0, 1.0]], "isOverall": false, "label": "Petición HTTP", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 92500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 29397.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 60078.0, "series": [{"data": [[1.0, 46332.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 60078.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 29397.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 16.625, "minX": 1.5497793E12, "maxY": 2832.8056872858415, "series": [{"data": [[1.54977942E12, 2832.8056872858415], [1.54977936E12, 1555.4067601638956], [1.54977948E12, 16.625], [1.5497793E12, 438.1613125128967]], "isOverall": false, "label": "bzm - Concurrency Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54977948E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.0, "maxY": 22541.0, "series": [{"data": [[3.0, 16535.5], [4.0, 16371.0], [5.0, 16412.0], [6.0, 16438.0], [7.0, 16295.0], [8.0, 15053.0], [9.0, 15107.0], [10.0, 16437.0], [11.0, 16368.0], [13.0, 15718.5], [14.0, 15056.0], [15.0, 15051.0], [17.0, 15660.5], [18.0, 16477.0], [19.0, 15047.0], [20.0, 16531.0], [21.0, 15051.0], [22.0, 15047.0], [23.0, 16498.0], [24.0, 16487.0], [25.0, 16346.0], [26.0, 16286.0], [28.0, 16525.5], [29.0, 15036.0], [30.0, 16519.0], [31.0, 16328.0], [33.0, 7038.0], [32.0, 16496.0], [35.0, 8033.0], [34.0, 7033.0], [37.0, 8032.0], [36.0, 8033.0], [38.0, 7033.0], [41.0, 8031.0], [40.0, 8034.0], [43.0, 8032.0], [42.0, 8032.0], [45.0, 8027.0], [44.0, 8029.0], [47.0, 8028.0], [46.0, 8030.0], [49.0, 8022.0], [48.0, 7026.0], [50.0, 7027.0], [53.0, 7019.0], [52.0, 7019.0], [55.0, 7016.5], [57.0, 7021.0], [59.0, 7019.5], [61.0, 7516.0], [62.0, 7020.0], [67.0, 3045.0], [66.0, 3037.0], [65.0, 3038.0], [64.0, 3029.5], [71.0, 3029.0], [70.0, 3030.0], [69.0, 3066.0], [68.0, 3077.0], [75.0, 3040.0], [74.0, 3020.0], [73.0, 3027.0], [72.0, 3027.0], [79.0, 3021.0], [78.0, 3055.0], [76.0, 3024.0], [83.0, 3017.0], [82.0, 3018.0], [81.0, 3023.0], [80.0, 3034.0], [87.0, 3012.0], [86.0, 3043.0], [85.0, 3050.0], [84.0, 3034.0], [91.0, 3010.0], [90.0, 3027.0], [89.0, 3012.0], [88.0, 3038.0], [95.0, 5918.0], [94.0, 5058.0], [93.0, 3046.0], [92.0, 3009.0], [99.0, 6162.0], [98.0, 5224.0], [97.0, 5232.0], [96.0, 5162.0], [103.0, 5658.0], [101.0, 4004.0], [107.0, 5931.0], [106.0, 6056.0], [105.0, 6047.0], [104.0, 5158.0], [111.0, 1904.0], [110.0, 5890.0], [109.0, 5153.0], [108.0, 2841.0], [115.0, 6140.0], [114.0, 3316.0], [113.0, 5152.0], [112.0, 5049.0], [119.0, 6123.0], [118.0, 5151.0], [117.0, 5149.0], [116.0, 6140.0], [123.0, 5144.0], [122.0, 5148.0], [121.0, 6121.0], [120.0, 6074.0], [127.0, 5145.0], [126.0, 5210.0], [125.0, 5679.0], [124.0, 5121.0], [135.0, 5566.0], [133.0, 5045.0], [132.0, 5204.0], [131.0, 6154.5], [129.0, 5119.0], [128.0, 5179.0], [143.0, 6164.0], [142.0, 5534.0], [141.0, 5080.0], [140.0, 5082.0], [139.0, 5057.0], [138.0, 5905.0], [137.0, 5869.0], [136.0, 2837.0], [151.0, 2839.0], [150.0, 5030.0], [149.0, 6054.0], [148.0, 5900.0], [147.0, 5058.0], [146.0, 5086.0], [145.0, 6105.0], [144.0, 4563.0], [159.0, 5037.0], [158.0, 5200.5], [156.0, 5019.0], [155.0, 5034.0], [154.0, 5064.0], [153.0, 5156.0], [152.0, 5194.0], [167.0, 3338.0], [166.0, 5154.0], [165.0, 5164.0], [164.0, 6035.0], [163.0, 5050.0], [162.0, 5020.0], [161.0, 5562.0], [160.0, 5163.0], [175.0, 2816.0], [174.0, 1916.0], [173.0, 3326.0], [172.0, 6118.0], [171.0, 2824.0], [170.0, 5027.0], [169.0, 5576.5], [183.0, 1900.0], [182.0, 1924.0], [181.0, 1931.0], [180.0, 1862.0], [179.0, 3326.0], [178.0, 6113.0], [177.0, 2590.0], [191.0, 1853.0], [190.0, 2810.0], [189.0, 5878.0], [188.0, 3252.0], [187.0, 1905.0], [186.0, 1916.0], [185.0, 1925.0], [184.0, 3242.0], [199.0, 5209.0], [198.0, 5037.0], [197.0, 5034.0], [196.0, 5014.0], [195.0, 5027.0], [194.0, 5025.0], [193.0, 3260.0], [192.0, 1923.0], [207.0, 2341.0], [206.0, 1909.0], [204.0, 5488.0], [203.0, 5036.0], [202.0, 5025.0], [201.0, 4500.0], [200.0, 5190.0], [215.0, 4983.0], [214.0, 1861.0], [213.0, 2794.0], [212.0, 3886.0], [210.0, 3111.0], [209.0, 1901.0], [208.0, 5066.0], [223.0, 6106.0], [222.0, 1899.0], [221.0, 2801.0], [220.0, 1827.0], [219.0, 1824.0], [218.0, 5173.0], [217.0, 5142.0], [216.0, 5068.0], [231.0, 1842.0], [230.0, 5183.0], [229.0, 5020.0], [228.0, 1889.0], [227.0, 1890.0], [225.0, 5171.0], [224.0, 3251.0], [239.0, 5511.0], [238.0, 1867.0], [237.0, 2254.5], [235.0, 2765.0], [234.0, 5001.0], [233.0, 5120.0], [232.0, 4958.0], [247.0, 4984.0], [245.0, 2672.0], [244.0, 4982.0], [243.0, 5466.0], [242.0, 3245.0], [241.0, 6096.0], [240.0, 5112.0], [255.0, 5016.0], [254.0, 5084.0], [253.0, 6021.0], [252.0, 5835.0], [251.0, 5150.0], [250.0, 5074.0], [249.0, 4981.0], [248.0, 5021.0], [270.0, 2756.0], [271.0, 2657.0], [269.0, 1857.0], [268.0, 2286.5], [266.0, 5940.0], [265.0, 2750.0], [264.0, 2755.0], [263.0, 5188.0], [257.0, 5039.0], [256.0, 2755.0], [259.0, 5177.0], [258.0, 2763.0], [262.0, 1843.0], [261.0, 2764.0], [260.0, 5087.0], [286.0, 4973.0], [287.0, 5062.0], [285.0, 4947.0], [284.0, 2743.0], [283.0, 2746.0], [282.0, 1860.0], [281.0, 3197.0], [280.0, 2737.0], [279.0, 2751.0], [273.0, 2738.0], [272.0, 2754.0], [275.0, 2634.0], [274.0, 1840.0], [278.0, 1758.0], [277.0, 2749.0], [276.0, 2730.0], [303.0, 971.0], [300.0, 389.1651232555112], [291.0, 2741.0], [290.0, 2738.0], [289.0, 4933.0], [288.0, 2675.0], [301.0, 464.59999999999997], [302.0, 770.5], [299.0, 1842.0], [298.0, 5469.0], [297.0, 1842.0], [296.0, 1786.0], [295.0, 2740.0], [294.0, 2718.0], [293.0, 5917.0], [292.0, 4932.0], [319.0, 3820.0], [304.0, 448.66666666666663], [305.0, 2728.0], [311.0, 3897.5], [310.0, 2713.0], [308.0, 2722.0], [306.0, 801.5], [314.0, 1520.5], [317.0, 2643.0], [316.0, 2728.0], [307.0, 2610.0], [315.0, 2711.0], [313.0, 2717.0], [312.0, 2729.0], [335.0, 6015.0], [322.0, 981.6666666666666], [321.0, 1014.6666666666666], [320.0, 6046.0], [327.0, 2721.0], [326.0, 5066.0], [325.0, 2702.0], [324.0, 2701.0], [323.0, 988.0], [329.0, 1545.5], [328.0, 2715.0], [334.0, 2696.0], [333.0, 2696.0], [331.0, 5060.0], [330.0, 5047.0], [350.0, 5885.0], [342.0, 3002.5], [341.0, 2689.0], [340.0, 5100.0], [343.0, 1826.6666666666667], [348.0, 2647.5], [339.0, 5422.0], [337.0, 5106.0], [336.0, 6030.0], [351.0, 5015.0], [349.0, 5438.0], [347.0, 2685.0], [346.0, 2688.0], [345.0, 4967.0], [344.0, 4968.0], [364.0, 1246.5555555555557], [354.0, 219.0], [355.0, 2663.0], [356.0, 90.0], [357.0, 4922.0], [358.0, 2229.5], [359.0, 5049.0], [353.0, 5063.0], [352.0, 5872.0], [362.0, 2526.0], [365.0, 1032.857142857143], [366.0, 791.2], [367.0, 799.5], [360.0, 4923.0], [361.0, 5385.0], [381.0, 833.0], [369.0, 2545.5], [368.0, 1493.0], [370.0, 1979.3333333333333], [380.0, 4947.0], [371.0, 4934.0], [382.0, 1703.75], [383.0, 1003.4285714285716], [374.0, 2092.0], [373.0, 5726.0], [372.0, 2673.0], [375.0, 2085.0], [376.0, 1860.0], [377.0, 1058.4285714285716], [378.0, 1808.0], [379.0, 1400.6], [397.0, 1349.3333333333335], [385.0, 1393.5], [384.0, 5914.0], [391.0, 5862.0], [390.0, 5957.0], [389.0, 4992.0], [388.0, 5958.0], [386.0, 989.6666666666666], [387.0, 2300.0], [392.0, 1929.6666666666667], [395.0, 254.0], [394.0, 2676.0], [393.0, 5929.0], [398.0, 2771.5], [399.0, 4911.0], [396.0, 3346.0], [415.0, 2766.0], [402.0, 960.6666666666666], [406.0, 2579.5], [405.0, 2676.0], [404.0, 2676.0], [407.0, 1787.0], [401.0, 1783.0], [400.0, 3181.0], [409.0, 1413.0], [408.0, 4947.0], [412.0, 84.0], [403.0, 2676.0], [414.0, 5016.0], [413.0, 5124.5], [411.0, 4934.0], [410.0, 4889.0], [428.0, 626.2307692307692], [417.0, 2645.5], [419.0, 1480.2], [420.0, 2693.5], [421.0, 5013.0], [422.0, 402.0], [423.0, 3627.3333333333335], [416.0, 5918.0], [424.0, 972.0], [427.0, 3034.0], [425.0, 5398.0], [431.0, 5844.0], [430.0, 4914.0], [429.0, 4905.0], [446.0, 2667.0], [435.0, 2425.5], [438.0, 1803.3333333333333], [437.0, 4967.0], [436.0, 2660.0], [439.0, 1716.0], [432.0, 4981.0], [434.0, 4891.0], [433.0, 5025.0], [440.0, 1264.25], [443.0, 3108.5], [447.0, 2961.0], [445.0, 4385.0], [444.0, 5018.0], [442.0, 1744.0], [441.0, 4927.0], [460.0, 1725.0], [456.0, 2537.0], [452.0, 1883.0], [455.0, 4919.0], [449.0, 4387.0], [448.0, 4876.0], [451.0, 4900.0], [450.0, 4893.0], [454.0, 5198.5], [457.0, 678.0], [459.0, 1302.2], [462.0, 910.8333333333333], [463.0, 340.2], [461.0, 5968.0], [458.0, 4492.0], [476.0, 1145.4], [464.0, 3740.0], [465.0, 2638.0], [471.0, 4841.0], [470.0, 4994.0], [469.0, 3136.0], [468.0, 4843.0], [466.0, 2603.0], [467.0, 952.5], [472.0, 1678.25], [474.0, 2561.5], [473.0, 5896.0], [475.0, 2540.5], [477.0, 1921.0], [479.0, 563.9], [478.0, 4901.0], [493.0, 2495.5], [481.0, 1768.3333333333333], [482.0, 477.44444444444446], [486.0, 694.0], [485.0, 4944.0], [484.0, 5799.0], [487.0, 2621.0], [480.0, 3136.0], [488.0, 2594.0], [489.0, 2625.0], [494.0, 1022.0], [495.0, 687.3333333333334], [492.0, 4797.0], [483.0, 4975.0], [491.0, 4906.0], [490.0, 2616.0], [508.0, 863.25], [498.0, 987.0], [497.0, 967.5], [496.0, 1719.0], [503.0, 1693.0], [502.0, 2623.0], [499.0, 1386.5], [500.0, 1690.6666666666667], [501.0, 969.0], [506.0, 1906.6666666666667], [505.0, 4834.0], [504.0, 2622.0], [507.0, 1725.0], [511.0, 1724.0], [510.0, 5869.0], [509.0, 5306.0], [538.0, 980.0], [516.0, 886.5], [512.0, 644.8], [514.0, 2612.0], [536.0, 1456.5], [518.0, 2606.0], [520.0, 1343.0], [524.0, 2611.0], [522.0, 3133.0], [526.0, 461.0], [530.0, 2735.5], [528.0, 2608.0], [542.0, 5337.0], [540.0, 1721.0], [532.0, 2733.5], [534.0, 3147.0], [568.0, 846.75], [550.0, 2885.666666666667], [558.0, 1813.0], [548.0, 1265.0], [544.0, 1092.3333333333335], [546.0, 5003.0], [570.0, 752.5], [574.0, 3030.0], [572.0, 1633.0], [560.0, 927.5], [562.0, 1383.5], [564.0, 2981.0], [566.0, 650.0], [552.0, 900.5], [554.0, 2984.5], [556.0, 3070.0], [600.0, 474.75321888411816], [588.0, 1291.75], [576.0, 375.3333333333333], [582.0, 927.6666666666667], [580.0, 2572.0], [578.0, 3091.0], [602.0, 1778.3333333333333], [606.0, 5257.0], [604.0, 2557.0], [592.0, 1004.5], [594.0, 964.0], [596.0, 1143.6666666666665], [598.0, 3392.5], [586.0, 2568.0], [584.0, 1670.0], [590.0, 827.25], [636.0, 320.0], [620.0, 1523.5], [616.0, 1135.8571428571427], [618.0, 4763.0], [622.0, 1474.5], [610.0, 3722.0], [608.0, 4811.0], [634.0, 5229.0], [612.0, 2369.0], [624.0, 2244.666666666667], [638.0, 2865.0], [628.0, 1990.0], [626.0, 5032.0], [630.0, 4236.0], [666.0, 1361.4], [640.0, 311.33333333333337], [642.0, 2127.0], [644.0, 5589.0], [648.0, 1682.5], [650.0, 4753.0], [654.0, 5843.0], [652.0, 5558.0], [660.0, 2464.5], [662.0, 3024.0], [670.0, 2513.0], [658.0, 5009.0], [668.0, 5547.0], [664.0, 2485.0], [646.0, 5564.0], [700.0, 3607.0], [686.0, 1084.0], [672.0, 2511.0], [674.0, 1442.5], [698.0, 2367.5], [682.0, 3729.3333333333335], [680.0, 2511.0], [684.0, 5555.0], [692.0, 2531.0], [694.0, 969.0], [702.0, 5540.0], [690.0, 4903.0], [688.0, 5819.0], [696.0, 4885.0], [678.0, 4036.5], [676.0, 2511.0], [732.0, 3054.5], [714.0, 877.0], [712.0, 5567.0], [716.0, 1881.0], [722.0, 1348.25], [730.0, 2279.0], [734.0, 5742.0], [720.0, 4701.0], [728.0, 4782.0], [718.0, 4883.0], [706.0, 4854.0], [704.0, 5561.0], [710.0, 4888.0], [708.0, 4852.0], [726.0, 4919.0], [724.0, 4886.0], [766.0, 2616.0], [742.0, 1769.3333333333333], [736.0, 97.0], [740.0, 1517.0], [738.0, 4694.0], [750.0, 4859.0], [748.0, 5691.0], [746.0, 5505.0], [744.0, 4966.0], [752.0, 1710.0], [754.0, 4656.0], [764.0, 4883.0], [762.0, 4688.0], [760.0, 2471.0], [758.0, 4776.0], [756.0, 4832.5], [796.0, 1880.0], [768.0, 3086.5], [782.0, 5779.0], [780.0, 5777.0], [778.0, 3571.0], [776.0, 4777.0], [770.0, 3695.75], [784.0, 1880.0], [786.0, 2921.0], [794.0, 2650.5], [798.0, 4829.0], [792.0, 4839.0], [774.0, 2462.0], [772.0, 4788.0], [790.0, 5759.0], [788.0, 2418.0], [830.0, 566.25], [818.0, 2424.0], [828.0, 4753.0], [826.0, 5749.0], [824.0, 4818.0], [806.0, 5712.0], [804.0, 4668.0], [802.0, 4498.0], [800.0, 5504.0], [822.0, 4822.0], [820.0, 4853.0], [816.0, 5577.0], [814.0, 4836.5], [812.0, 4803.5], [810.0, 4657.0], [808.0, 4849.0], [860.0, 5454.0], [844.0, 2460.5], [842.0, 4749.0], [840.0, 4820.0], [862.0, 2468.5], [858.0, 2418.0], [856.0, 5667.0], [854.0, 5177.0], [852.0, 2980.0], [848.0, 4657.0], [846.0, 2321.0], [834.0, 2762.0], [832.0, 4807.0], [838.0, 5497.5], [836.0, 5720.0], [892.0, 4625.0], [866.0, 3171.0], [864.0, 1485.0], [870.0, 1494.0], [894.0, 1060.5], [890.0, 4788.0], [888.0, 4829.0], [886.0, 4792.0], [884.0, 4564.0], [880.0, 5658.0], [878.0, 5664.0], [876.0, 2360.0], [872.0, 1517.0], [924.0, 5420.0], [898.0, 1076.0], [900.0, 656.8346017250095], [902.0, 2417.0], [904.0, 330.0], [906.0, 4689.0], [908.0, 2474.5], [910.0, 4888.0], [896.0, 4773.0], [926.0, 5676.0], [914.0, 1417.5], [912.0, 4778.0], [922.0, 5619.0], [920.0, 5682.0], [918.0, 4779.0], [916.0, 2414.0], [956.0, 1040.0], [942.0, 2084.0], [934.0, 1378.0], [932.0, 5639.0], [930.0, 4640.0], [928.0, 4623.0], [938.0, 1681.0], [936.0, 4658.0], [940.0, 2389.5], [958.0, 3026.0], [946.0, 4600.0], [944.0, 2385.0], [954.0, 4739.0], [952.0, 5707.0], [950.0, 2722.0], [948.0, 4651.0], [984.0, 1720.75], [976.0, 2063.333333333333], [966.0, 2977.5], [964.0, 4785.0], [962.0, 4784.0], [960.0, 2365.0], [978.0, 943.0], [990.0, 5666.0], [986.0, 2366.0], [982.0, 4757.0], [980.0, 4582.0], [974.0, 5612.0], [972.0, 4710.0], [970.0, 4783.0], [968.0, 4619.0], [1016.0, 3170.5], [1002.0, 1573.0], [1000.0, 1369.0], [1004.0, 1318.0], [1006.0, 3013.5], [994.0, 4716.0], [992.0, 1442.0], [998.0, 5597.0], [996.0, 1369.0], [1018.0, 1771.0], [1022.0, 2346.0], [1010.0, 5586.0], [1008.0, 4728.0], [1020.0, 2819.0], [1014.0, 2846.0], [1012.0, 5552.0], [1076.0, 1048.142857142857], [1044.0, 372.0], [1048.0, 1435.0], [1084.0, 5456.0], [1072.0, 5647.0], [1032.0, 4586.0], [1028.0, 4586.0], [1068.0, 4625.0], [1064.0, 5537.0], [1060.0, 5589.0], [1056.0, 5647.0], [1052.0, 4661.0], [1148.0, 1746.3333333333333], [1100.0, 2385.5], [1092.0, 295.0], [1088.0, 2650.0], [1096.0, 4683.0], [1128.0, 1091.5], [1124.0, 4616.0], [1120.0, 4609.0], [1112.0, 2769.5], [1108.0, 4623.0], [1104.0, 1352.0], [1116.0, 2312.0], [1144.0, 4668.0], [1140.0, 1342.0], [1136.0, 1345.0], [1132.0, 2286.0], [1212.0, 4551.0], [1168.0, 2297.5], [1180.0, 4563.0], [1156.0, 5577.0], [1152.0, 4523.0], [1164.0, 5379.0], [1160.0, 5318.0], [1172.0, 4716.0], [1200.0, 830.9713069233592], [1204.0, 2912.0], [1192.0, 2860.5], [1208.0, 2663.0], [1196.0, 4611.0], [1188.0, 3307.0], [1184.0, 5260.0], [1268.0, 5372.0], [1276.0, 4659.0], [1236.0, 1796.3333333333333], [1232.0, 2600.0], [1240.0, 2165.0], [1252.0, 810.0], [1272.0, 4663.0], [1264.0, 4621.0], [1228.0, 2557.0], [1224.0, 3400.5], [1220.0, 4697.0], [1216.0, 2548.0], [1260.0, 5516.0], [1248.0, 5522.0], [1244.0, 5140.0], [1288.0, 4524.0], [1332.0, 2148.0], [1280.0, 2901.5], [1284.0, 5394.0], [1292.0, 4382.0], [1300.0, 4596.0], [1296.0, 4518.0], [1304.0, 4596.0], [1308.0, 4421.0], [1336.0, 3260.3333333333335], [1340.0, 4519.0], [1316.0, 5419.0], [1312.0, 1196.0], [1320.0, 5175.0], [1324.0, 1277.0], [1328.0, 2153.0], [1348.0, 2130.0], [1396.0, 4451.0], [1392.0, 2119.0], [1356.0, 2126.0], [1400.0, 1147.0], [1376.0, 4496.0], [1364.0, 1910.6666666666667], [1368.0, 953.5], [1344.0, 2137.0], [1352.0, 2139.0], [1372.0, 4382.0], [1388.0, 1834.3333333333333], [1384.0, 4371.0], [1380.0, 4494.0], [1412.0, 4319.0], [1416.0, 801.0], [1408.0, 4462.0], [1432.0, 5344.0], [1428.0, 4444.0], [1424.0, 4768.0], [1436.0, 1948.0], [1420.0, 2089.0], [1456.0, 5154.0], [1460.0, 4109.0], [1464.0, 4332.0], [1452.0, 5304.0], [1448.0, 4504.0], [1444.0, 4148.0], [1440.0, 4357.0], [1476.0, 5257.0], [1480.0, 2886.0], [1472.0, 2667.5], [1500.0, 1597.2585081819116], [1496.0, 4479.0], [1492.0, 4755.0], [1484.0, 5299.5], [1520.0, 4746.0], [1524.0, 4788.0], [1504.0, 2042.0], [1508.0, 4440.0], [1512.0, 4422.0], [1516.0, 5222.0], [1528.0, 4327.0], [1540.0, 5289.0], [1584.0, 5273.0], [1592.0, 1994.0], [1536.0, 4235.0], [1544.0, 4397.0], [1548.0, 4423.0], [1564.0, 5276.0], [1560.0, 4354.0], [1556.0, 4964.0], [1552.0, 3047.0], [1572.0, 4452.0], [1576.0, 4368.0], [1580.0, 2004.0], [1596.0, 5288.0], [1588.0, 2002.0], [1604.0, 5031.0], [1656.0, 4969.0], [1616.0, 2801.5], [1620.0, 5049.0], [1624.0, 4686.0], [1608.0, 4216.0], [1612.0, 4254.0], [1628.0, 4225.0], [1660.0, 1186.0], [1632.0, 4660.0], [1636.0, 1006.0], [1640.0, 1056.0], [1644.0, 1029.0], [1652.0, 5217.0], [1648.0, 5001.0], [1692.0, 7275.5], [1672.0, 611.5], [1680.0, 4937.0], [1684.0, 3998.0], [1688.0, 2519.0], [1664.0, 3557.0], [1696.0, 4186.0], [1700.0, 4286.0], [1704.0, 4317.0], [1724.0, 2852.0], [1716.0, 1872.0], [1712.0, 4308.0], [1676.0, 5198.0], [1732.0, 2811.0], [1784.0, 2553.0], [1740.0, 4265.0], [1736.0, 1883.0], [1776.0, 1840.0], [1752.0, 10910.0], [1748.0, 964.0], [1744.0, 958.5], [1728.0, 1877.5], [1756.0, 4228.0], [1768.0, 702.5], [1764.0, 2653.0], [1760.0, 4807.0], [1772.0, 3261.0], [1788.0, 4861.0], [1780.0, 5010.0], [1800.0, 1410.0312862108954], [1804.0, 2898.5], [1792.0, 1155.0], [1820.0, 3546.0], [1796.0, 4990.0], [1840.0, 2542.8], [1844.0, 3603.0], [1848.0, 1735.5], [1852.0, 2458.0], [1824.0, 3513.0], [1828.0, 3295.0], [1832.0, 4539.0], [1836.0, 4476.0], [1808.0, 3603.0], [1812.0, 1820.0], [1816.0, 4560.0], [1904.0, 1668.0], [1864.0, 4244.0], [1860.0, 4237.0], [1856.0, 3244.0], [1868.0, 2860.0], [1888.0, 883.0], [1916.0, 2529.0], [1912.0, 2227.0], [1908.0, 4478.0], [1884.0, 2914.0], [1880.0, 4193.0], [1896.0, 2819.5], [1892.0, 3262.0], [1900.0, 1765.0], [1924.0, 3865.0], [1920.0, 1858.6666666666667], [1928.0, 4004.0], [1968.0, 1945.0], [1932.0, 4005.0], [1972.0, 1691.0], [1948.0, 2961.0], [1944.0, 2152.0], [1940.0, 4995.0], [1936.0, 4001.0], [1964.0, 1962.0], [1960.0, 3993.0], [1956.0, 2198.0], [1952.0, 4856.0], [1980.0, 2788.0], [1976.0, 3519.0], [1984.0, 4197.0], [2040.0, 3034.0], [1992.0, 4349.0], [1988.0, 5085.0], [2012.0, 1563.0], [2008.0, 2519.0], [2004.0, 2951.0], [2000.0, 1678.0], [1996.0, 1644.0], [2016.0, 1671.0], [2020.0, 1676.0], [2024.0, 2787.0], [2028.0, 2640.0], [2044.0, 4174.0], [2036.0, 2836.0], [2032.0, 3058.5], [2136.0, 34.0], [2160.0, 170.0], [2080.0, 2733.0], [2056.0, 1651.0], [2048.0, 1645.0], [2232.0, 4123.0], [2200.0, 1631.0], [2240.0, 2780.0], [2256.0, 285.0], [2208.0, 19.0], [2224.0, 753.0], [2328.0, 1109.0], [2344.0, 10084.0], [2400.0, 1435.0092751960256], [2384.0, 3766.5], [2312.0, 3812.5], [2360.0, 4054.0], [2448.0, 830.0], [2456.0, 1143.5], [2432.0, 225.0], [2472.0, 983.5], [2480.0, 2835.122807017545], [2488.0, 2961.0], [2440.0, 43.0], [2544.0, 148.0], [2536.0, 2269.0], [2496.0, 2152.5], [2504.0, 3949.0], [2512.0, 1491.0], [2520.0, 19395.0], [2568.0, 2589.0], [2560.0, 284.0], [2600.0, 2332.0], [2592.0, 4579.0], [2576.0, 1485.0], [2584.0, 1335.0], [2624.0, 1647.0], [2648.0, 1930.0], [2640.0, 2505.677419354838], [2680.0, 4791.333333333333], [2696.0, 1290.6666666666667], [2712.0, 627.3333333333333], [2744.0, 20153.0], [2736.0, 2008.142857142857], [2728.0, 1750.5], [2688.0, 3841.0], [2704.0, 11885.0], [2760.0, 850.6666666666666], [2784.0, 21385.0], [2792.0, 3642.0], [2800.0, 2089.5], [2768.0, 647.0], [2776.0, 594.6666666666666], [2928.0, 4183.0], [2880.0, 1299.0], [2896.0, 1960.0], [2888.0, 1922.0], [2904.0, 3544.0], [2912.0, 2303.0], [2832.0, 1815.0], [2856.0, 3704.1428571428573], [2848.0, 2104.1428571428573], [3000.0, 3725.6779398541253], [2992.0, 3368.3333333333335], [2952.0, 2690.0], [2984.0, 1740.0], [2169.0, 1623.0], [2153.0, 1648.0], [2145.0, 1627.0], [2049.0, 1652.0], [2073.0, 1650.0], [2193.0, 1162.0], [2225.0, 2128.5], [2289.0, 4912.0], [2241.0, 4047.0], [2201.0, 2859.428571428571], [2305.0, 1028.5], [2385.0, 1129.0], [2425.0, 252.5], [2393.0, 2774.0], [2449.0, 338.0], [2433.0, 885.0], [2465.0, 1601.0], [2473.0, 2479.0], [2457.0, 1469.0], [2497.0, 903.0], [2505.0, 785.0], [2521.0, 6406.0], [2569.0, 1054.0], [2617.0, 1897.8333333333335], [2609.0, 278.0], [2601.0, 2364.0], [2577.0, 1387.3333333333333], [2585.0, 2364.0], [2657.0, 1252.0], [2673.0, 1091.0], [2665.0, 2735.2], [2681.0, 2742.0], [2705.0, 1764.6666666666667], [2737.0, 3591.5], [2721.0, 427.0], [2697.0, 2013.0], [2713.0, 1942.0], [2785.0, 37.0], [2793.0, 9764.4], [2801.0, 1312.8], [2809.0, 43.0], [2761.0, 21361.0], [2777.0, 2577.846153846154], [2937.0, 2103.0], [2881.0, 1571.0], [2897.0, 1127.0], [2905.0, 3396.0], [2929.0, 2798.0], [2865.0, 2854.0], [2857.0, 1664.0], [2849.0, 1548.0], [2945.0, 3551.0], [2953.0, 2305.0], [2993.0, 1813.0], [2961.0, 2516.0], [2969.0, 2048.0], [2985.0, 3466.0], [2977.0, 2197.5], [1073.0, 809.6666666666666], [1053.0, 2786.0], [1029.0, 1450.0], [1025.0, 1407.0], [1037.0, 3187.0], [1033.0, 5580.0], [1077.0, 290.5714285714286], [1065.0, 1252.0], [1085.0, 2712.0], [1081.0, 4129.0], [1061.0, 5648.0], [1057.0, 4801.0], [1049.0, 4728.0], [1045.0, 3460.0], [1041.0, 4610.5], [1145.0, 4544.0], [1093.0, 2836.333333333333], [1117.0, 1703.0], [1089.0, 5639.0], [1097.0, 2398.0], [1101.0, 5337.0], [1113.0, 2828.5], [1105.0, 5632.0], [1149.0, 4665.0], [1125.0, 4707.0], [1121.0, 1420.0], [1141.0, 4669.0], [1137.0, 4537.0], [1133.0, 4509.0], [1129.0, 5588.0], [1209.0, 2488.0], [1185.0, 1309.0], [1205.0, 2291.5], [1193.0, 682.0], [1197.0, 840.3333333333334], [1213.0, 2618.0], [1201.0, 5304.0], [1189.0, 4563.0], [1181.0, 4550.0], [1157.0, 4580.0], [1153.0, 5472.0], [1165.0, 2641.0], [1161.0, 5567.0], [1177.0, 3377.5], [1173.0, 5274.0], [1277.0, 5246.0], [1249.0, 1573.0], [1237.0, 220.0], [1233.0, 2199.0], [1241.0, 5395.0], [1273.0, 2504.0], [1269.0, 2159.0], [1265.0, 4442.0], [1229.0, 5250.0], [1225.0, 2218.0], [1221.0, 2544.0], [1217.0, 2231.0], [1245.0, 4685.0], [1261.0, 5215.0], [1257.0, 3720.5], [1253.0, 2172.0], [1309.0, 1183.0], [1297.0, 5484.0], [1301.0, 1221.0], [1305.0, 5203.0], [1325.0, 784.6666666666666], [1321.0, 5219.0], [1313.0, 1271.0], [1341.0, 4624.0], [1337.0, 4550.0], [1333.0, 4574.0], [1293.0, 4568.0], [1289.0, 1207.0], [1285.0, 4477.0], [1281.0, 2704.0], [1353.0, 522.5], [1401.0, 1532.0], [1349.0, 4513.0], [1345.0, 4528.0], [1373.0, 4555.0], [1365.0, 1255.0], [1361.0, 3249.0], [1377.0, 540.0], [1381.0, 5198.0], [1385.0, 4497.0], [1389.0, 4257.0], [1405.0, 4986.5], [1397.0, 4486.0], [1393.0, 2129.0], [1357.0, 4347.0], [1417.0, 1944.3333333333333], [1465.0, 2290.0], [1409.0, 1647.5], [1437.0, 1101.0], [1433.0, 5325.0], [1429.0, 5156.0], [1413.0, 1753.3333333333333], [1421.0, 1096.6666666666665], [1457.0, 4770.0], [1461.0, 1105.0], [1469.0, 2229.6666666666665], [1441.0, 762.0], [1453.0, 5345.0], [1449.0, 5134.0], [1445.0, 4335.0], [1533.0, 4343.0], [1481.0, 5348.0], [1477.0, 4433.0], [1473.0, 2060.0], [1501.0, 4479.0], [1513.0, 5275.0], [1509.0, 4314.0], [1505.0, 4248.0], [1517.0, 2035.0], [1529.0, 3746.0], [1525.0, 2243.0], [1521.0, 4385.0], [1485.0, 5331.0], [1493.0, 1718.0], [1489.0, 4445.0], [1497.0, 754.0], [1597.0, 5076.0], [1537.0, 4433.0], [1565.0, 1049.0], [1561.0, 5290.0], [1557.0, 2018.0], [1553.0, 4374.0], [1577.0, 4223.0], [1573.0, 2538.0], [1569.0, 3552.5], [1589.0, 5077.0], [1549.0, 4233.0], [1545.0, 4315.0], [1541.0, 4429.0], [1581.0, 4377.0], [1601.0, 5053.0], [1649.0, 1185.0], [1653.0, 4161.0], [1657.0, 4189.0], [1621.0, 1978.0], [1617.0, 5271.0], [1625.0, 1973.0], [1605.0, 4249.0], [1609.0, 4693.0], [1613.0, 1984.0], [1629.0, 4378.0], [1645.0, 750.0], [1641.0, 5014.0], [1637.0, 1056.0], [1633.0, 4175.0], [1661.0, 4162.0], [1673.0, 5112.0], [1669.0, 6750.25], [1677.0, 4147.0], [1713.0, 5167.0], [1681.0, 1026.0], [1665.0, 4175.0], [1689.0, 1903.0], [1725.0, 997.0], [1697.0, 5076.0], [1705.0, 4958.0], [1709.0, 4627.0], [1721.0, 4945.5], [1717.0, 2498.0], [1733.0, 985.0], [1785.0, 4047.0], [1729.0, 992.0], [1741.0, 1873.0], [1757.0, 4057.0], [1777.0, 2820.0], [1745.0, 6665.0], [1749.0, 4558.0], [1753.0, 6536.666666666667], [1761.0, 4124.0], [1765.0, 4119.0], [1769.0, 5144.0], [1773.0, 2827.0], [1789.0, 4070.0], [1781.0, 1846.0], [1801.0, 2447.0], [1797.0, 2387.0], [1793.0, 940.0], [1821.0, 4553.0], [1805.0, 569.5], [1841.0, 2546.0], [1845.0, 2329.0], [1849.0, 4885.0], [1853.0, 2833.5], [1825.0, 4534.0], [1829.0, 2134.0], [1833.0, 1437.0], [1837.0, 1222.7142857142858], [1817.0, 280.5], [1813.0, 1829.0], [1809.0, 4566.0], [1857.0, 2798.0], [1913.0, 1735.0], [1865.0, 902.0], [1861.0, 4873.0], [1869.0, 1786.0], [1885.0, 3981.0], [1881.0, 4042.0], [1877.0, 3124.0], [1873.0, 3872.0], [1893.0, 1259.0], [1889.0, 4516.0], [1897.0, 1772.0], [1901.0, 1771.0], [1917.0, 4036.0], [1909.0, 1990.0], [1905.0, 2679.5], [1929.0, 4861.0], [1933.0, 2537.5], [1925.0, 1974.0], [1921.0, 2220.0], [1949.0, 1973.0], [1945.0, 4996.0], [1937.0, 4003.0], [1965.0, 3981.0], [1961.0, 4138.0], [1957.0, 1967.0], [1953.0, 4016.0], [1981.0, 1682.0], [1977.0, 2907.0], [1973.0, 1682.0], [1969.0, 4992.0], [1993.0, 1733.5], [1985.0, 4246.0], [1989.0, 2554.0], [2013.0, 1658.0], [2005.0, 4197.0], [2001.0, 5010.0], [1997.0, 1674.0], [2021.0, 2820.5], [2025.0, 1667.0], [2029.0, 3869.0], [2017.0, 1669.0], [2045.0, 4047.0], [2041.0, 3133.0], [2037.0, 1652.0], [2033.0, 1653.0], [2138.0, 15.0], [2090.0, 1609.0], [2050.0, 1591.0], [2202.0, 1628.0], [2226.0, 653.0], [2290.0, 4101.0], [2274.0, 2709.5], [2258.0, 1543.0], [2250.0, 2776.0], [2402.0, 867.5], [2362.0, 386.0], [2386.0, 732.0], [2410.0, 66.0], [2418.0, 1509.0], [2346.0, 9771.0], [2442.0, 39.0], [2474.0, 350.0], [2466.0, 2422.5], [2490.0, 3974.0], [2450.0, 1198.0], [2458.0, 816.5], [2530.0, 2076.6666666666665], [2538.0, 3966.0], [2546.0, 2723.25], [2498.0, 3090.0], [2506.0, 1065.8], [2514.0, 1507.0], [2522.0, 7869.333333333334], [2578.0, 1933.0], [2570.0, 2143.0], [2618.0, 6191.75], [2610.0, 2738.3055555555557], [2586.0, 3173.0], [2666.0, 3263.0], [2674.0, 630.0], [2682.0, 621.5], [2642.0, 2528.0], [2634.0, 3760.0], [2626.0, 3429.3], [2650.0, 2390.75], [2706.0, 1385.0], [2698.0, 5524.6], [2690.0, 1393.0], [2738.0, 7398.333333333334], [2722.0, 2478.0], [2714.0, 2716.5], [2802.0, 2129.3333333333335], [2794.0, 1640.0], [2770.0, 1907.3333333333333], [2778.0, 1898.0], [2930.0, 3521.0], [2882.0, 833.5], [2898.0, 1648.0], [2906.0, 1403.0], [2938.0, 2087.0], [2922.0, 3522.0], [2914.0, 1457.0], [2818.0, 4314.0], [2874.0, 1677.0], [2850.0, 2141.9166666666665], [2946.0, 2817.0], [2970.0, 1926.0], [2986.0, 2837.5], [2978.0, 1914.0], [2115.0, 1222.0], [2099.0, 1647.0], [2067.0, 1643.0], [2051.0, 1656.0], [2227.0, 95.0], [2235.0, 387.0], [2267.0, 331.0], [2211.0, 3975.0], [2427.0, 3447.5], [2315.0, 3340.0], [2331.0, 3007.4], [2339.0, 1592.0], [2387.0, 2203.0], [2379.0, 4512.0], [2451.0, 1442.5], [2459.0, 1634.0], [2443.0, 661.0], [2539.0, 1143.0], [2515.0, 21895.0], [2507.0, 3951.0], [2523.0, 2650.0], [2579.0, 2130.0], [2563.0, 1243.6666666666665], [2619.0, 1509.6666666666665], [2611.0, 2666.0], [2603.0, 2263.0], [2587.0, 3042.0], [2643.0, 755.0], [2659.0, 2519.0], [2667.0, 2100.5], [2675.0, 814.5], [2683.0, 2535.882352941177], [2651.0, 2188.6666666666665], [2691.0, 2613.375], [2715.0, 770.0], [2747.0, 9878.25], [2739.0, 2497.0], [2731.0, 1391.0], [2723.0, 4195.0], [2707.0, 2451.0], [2787.0, 1672.8152866242037], [2803.0, 7009.0], [2811.0, 41.0], [2771.0, 1740.75], [2779.0, 2583.0], [2915.0, 1376.0], [2883.0, 1567.0], [2899.0, 73.0], [2907.0, 2241.0], [2819.0, 1806.0], [2875.0, 1925.0], [2867.0, 1909.0], [2859.0, 1937.0], [2955.0, 2244.0], [2995.0, 3060.6666666666665], [2979.0, 1572.0], [541.0, 1135.1666666666665], [537.0, 1290.0], [519.0, 1724.0], [517.0, 5786.0], [515.0, 2597.0], [513.0, 1725.0], [539.0, 2604.0], [543.0, 590.1428571428571], [523.0, 2594.0], [521.0, 4785.0], [525.0, 4861.0], [527.0, 1298.0], [529.0, 1331.0], [533.0, 1871.6666666666667], [531.0, 2597.0], [535.0, 1705.0], [571.0, 4937.0], [549.0, 256.5], [559.0, 650.0], [547.0, 2582.0], [545.0, 2589.0], [551.0, 465.875], [569.0, 2583.0], [573.0, 5610.0], [575.0, 2722.0], [561.0, 1359.5], [563.0, 1023.3333333333334], [565.0, 1374.0], [567.0, 1732.0], [555.0, 1469.0], [553.0, 5288.0], [557.0, 1694.0], [583.0, 2241.0], [593.0, 1060.5], [607.0, 5259.0], [605.0, 5302.0], [603.0, 2572.0], [601.0, 4827.0], [595.0, 1595.5], [597.0, 2818.5], [599.0, 2267.5], [585.0, 2939.5], [587.0, 3205.0], [589.0, 2399.0], [591.0, 2571.0], [581.0, 4966.0], [579.0, 1635.0], [577.0, 3782.5], [635.0, 4232.0], [621.0, 1613.5], [619.0, 2492.0], [617.0, 5888.0], [623.0, 659.1428571428571], [613.0, 3040.0], [611.0, 5243.0], [633.0, 5045.5], [615.0, 5249.0], [637.0, 5715.0], [639.0, 2434.0], [625.0, 2980.0], [627.0, 5865.0], [629.0, 2612.0], [631.0, 3353.5], [669.0, 2518.0], [661.0, 1721.0], [649.0, 1389.5], [651.0, 2526.0], [655.0, 2492.0], [643.0, 4785.0], [641.0, 5047.0], [647.0, 2533.0], [645.0, 4934.0], [653.0, 2528.0], [663.0, 1384.0], [671.0, 2525.0], [667.0, 2513.0], [665.0, 5205.0], [659.0, 5615.0], [657.0, 5373.5], [677.0, 413.0], [675.0, 1389.0], [699.0, 644.0], [697.0, 4910.0], [679.0, 2501.0], [701.0, 5562.0], [683.0, 478.0], [685.0, 995.0], [687.0, 1095.0], [673.0, 5543.0], [693.0, 1438.5], [691.0, 4914.0], [689.0, 4886.0], [695.0, 1591.0], [703.0, 5815.0], [733.0, 2554.0], [711.0, 1792.6666666666667], [729.0, 246.0], [707.0, 1671.6666666666667], [705.0, 1607.0], [709.0, 4849.0], [713.0, 2890.0], [717.0, 4886.0], [715.0, 4842.0], [719.0, 4705.0], [723.0, 2680.0], [735.0, 4838.0], [721.0, 5547.0], [731.0, 4788.0], [725.0, 4882.0], [767.0, 1812.3333333333333], [761.0, 3008.0], [741.0, 1772.6666666666667], [739.0, 4872.0], [737.0, 5010.0], [743.0, 4833.0], [751.0, 4885.0], [749.0, 4686.0], [747.0, 4870.0], [745.0, 4878.0], [753.0, 1444.25], [755.0, 71.0], [759.0, 1208.6], [765.0, 4855.0], [763.0, 2414.0], [757.0, 4218.0], [799.0, 4836.0], [777.0, 391.0], [781.0, 4773.0], [779.0, 5727.0], [785.0, 1998.3333333333333], [797.0, 5665.0], [795.0, 4664.0], [793.0, 4813.0], [775.0, 5510.0], [773.0, 5519.0], [771.0, 4811.0], [769.0, 4680.0], [783.0, 4847.0], [791.0, 5765.0], [789.0, 4847.0], [787.0, 2446.0], [831.0, 1186.8], [807.0, 1290.0], [809.0, 2512.0], [815.0, 5581.0], [805.0, 4801.0], [803.0, 4834.0], [819.0, 1910.0], [817.0, 4830.0], [829.0, 5760.0], [827.0, 2448.0], [825.0, 2418.0], [823.0, 4753.0], [821.0, 4831.0], [863.0, 4753.0], [841.0, 2668.0], [845.0, 1582.0], [843.0, 1502.0], [855.0, 2403.5], [859.0, 1131.6], [861.0, 4902.0], [857.0, 4801.0], [839.0, 4706.0], [835.0, 5754.0], [833.0, 2427.0], [847.0, 4759.0], [853.0, 4660.0], [851.0, 5699.0], [849.0, 5571.0], [891.0, 1896.25], [865.0, 3193.5], [873.0, 961.0], [875.0, 3608.0], [879.0, 2370.0], [877.0, 4651.0], [881.0, 1410.5], [883.0, 3508.0], [889.0, 2818.5], [871.0, 4737.0], [869.0, 4696.5], [867.0, 4837.0], [895.0, 1466.25], [893.0, 2381.0], [887.0, 5635.0], [885.0, 4674.0], [927.0, 2390.0], [905.0, 1708.3333333333333], [907.0, 2401.0], [915.0, 2453.5], [925.0, 2372.0], [923.0, 2351.0], [921.0, 4336.0], [903.0, 1471.0], [901.0, 2404.0], [899.0, 4636.0], [897.0, 4726.0], [909.0, 2835.0], [919.0, 1523.0], [917.0, 2399.0], [913.0, 4881.0], [955.0, 1412.0], [943.0, 1342.0], [937.0, 2243.166666666667], [941.0, 4721.0], [939.0, 2388.0], [945.0, 1275.0], [951.0, 902.5], [959.0, 4796.0], [953.0, 5318.0], [935.0, 4676.0], [933.0, 5673.0], [931.0, 2376.0], [929.0, 4722.0], [949.0, 4322.0], [947.0, 5423.0], [991.0, 4580.0], [967.0, 3046.5], [969.0, 3340.0], [971.0, 5612.0], [975.0, 4785.0], [961.0, 5692.0], [965.0, 4769.0], [963.0, 4602.0], [973.0, 4792.0], [979.0, 2650.6666666666665], [977.0, 5504.0], [987.0, 1230.6666666666665], [989.0, 3561.5], [985.0, 4613.0], [983.0, 4611.0], [981.0, 5420.0], [1021.0, 2748.0], [997.0, 1852.5], [993.0, 1670.5], [995.0, 4602.0], [999.0, 2713.5], [1001.0, 1407.0], [1005.0, 1356.0], [1003.0, 4766.0], [1007.0, 5604.0], [1023.0, 1361.0], [1011.0, 1363.0], [1009.0, 1357.0], [1019.0, 1391.0], [1017.0, 1348.0], [1015.0, 4597.0], [1013.0, 4738.0], [1082.0, 5377.0], [1074.0, 951.8], [1026.0, 2432.0], [1030.0, 4758.0], [1038.0, 2322.0], [1034.0, 4548.0], [1086.0, 1635.25], [1062.0, 5651.0], [1058.0, 2696.0], [1078.0, 4912.0], [1050.0, 1520.5], [1046.0, 4702.0], [1042.0, 1343.0], [1054.0, 2500.0], [1066.0, 2200.0], [1070.0, 3506.3333333333335], [1150.0, 784.0], [1126.0, 2556.0], [1122.0, 4584.0], [1106.0, 2898.0], [1110.0, 3075.5], [1114.0, 1502.0], [1146.0, 4434.0], [1142.0, 4677.0], [1138.0, 4612.0], [1118.0, 2542.0], [1090.0, 4630.0], [1098.0, 4789.0], [1094.0, 4648.0], [1102.0, 1428.0], [1134.0, 5609.0], [1130.0, 5618.0], [1210.0, 1372.0], [1186.0, 823.5], [1178.0, 1101.0], [1174.0, 4652.0], [1170.0, 4945.0], [1198.0, 2472.0], [1214.0, 5260.0], [1202.0, 1348.0], [1166.0, 4549.0], [1162.0, 4568.0], [1158.0, 4514.0], [1154.0, 5577.0], [1194.0, 3386.0], [1190.0, 1295.0], [1182.0, 4540.0], [1274.0, 4615.0], [1266.0, 2112.0], [1230.0, 2721.0], [1222.0, 4696.0], [1218.0, 4544.0], [1250.0, 2351.5], [1262.0, 1411.0], [1278.0, 2540.0], [1258.0, 2169.0], [1246.0, 2175.0], [1242.0, 2176.0], [1238.0, 3759.5], [1234.0, 4619.0], [1290.0, 1946.3333333333333], [1286.0, 4462.0], [1282.0, 2174.0], [1294.0, 4390.0], [1302.0, 1817.0], [1298.0, 1206.0], [1306.0, 1215.0], [1310.0, 4388.0], [1318.0, 2886.5], [1326.0, 4469.0], [1334.0, 4578.0], [1330.0, 3319.5], [1354.0, 1219.25], [1398.0, 2994.0], [1394.0, 4315.0], [1358.0, 3871.0], [1406.0, 5419.0], [1402.0, 5342.0], [1362.0, 4200.0], [1366.0, 1997.6666666666667], [1370.0, 3301.0], [1374.0, 1235.0], [1346.0, 2133.0], [1350.0, 4514.0], [1378.0, 1713.0], [1386.0, 5171.0], [1382.0, 2129.0], [1390.0, 2131.0], [1414.0, 2089.0], [1418.0, 2308.0], [1410.0, 4365.0], [1438.0, 2686.5], [1434.0, 2761.5], [1430.0, 4292.0], [1426.0, 3239.0], [1422.0, 4426.0], [1458.0, 1631.0], [1462.0, 2313.0], [1454.0, 10483.5], [1450.0, 5400.0], [1446.0, 4322.0], [1442.0, 4401.5], [1470.0, 4438.0], [1478.0, 4310.0], [1526.0, 5328.0], [1474.0, 2341.5], [1498.0, 4344.0], [1494.0, 5048.0], [1490.0, 2056.0], [1502.0, 4380.0], [1482.0, 2305.0], [1486.0, 4431.0], [1522.0, 4475.0], [1534.0, 5289.0], [1506.0, 4476.0], [1510.0, 2544.0], [1514.0, 2038.0], [1518.0, 5249.0], [1530.0, 2031.0], [1542.0, 221.0], [1538.0, 4236.0], [1546.0, 4358.0], [1550.0, 4454.0], [1566.0, 2009.0], [1558.0, 2017.0], [1554.0, 4383.0], [1598.0, 1111.0], [1570.0, 5278.0], [1574.0, 5206.0], [1582.0, 4291.0], [1594.0, 4888.5], [1590.0, 5201.0], [1586.0, 3045.0], [1630.0, 1969.0], [1618.0, 5007.0], [1622.0, 5186.0], [1626.0, 4682.0], [1602.0, 4261.0], [1606.0, 5028.0], [1610.0, 1982.0], [1614.0, 5063.0], [1646.0, 2710.0], [1662.0, 4129.0], [1634.0, 4655.0], [1638.0, 1938.0], [1642.0, 1045.0], [1658.0, 5129.0], [1654.0, 1924.0], [1650.0, 4299.0], [1694.0, 5098.0], [1690.0, 2060.333333333333], [1682.0, 2399.0], [1686.0, 4959.5], [1670.0, 4121.0], [1666.0, 4956.0], [1726.0, 7937.0], [1698.0, 1896.0], [1702.0, 1461.0], [1710.0, 1885.0], [1706.0, 1891.0], [1718.0, 1868.0], [1714.0, 3577.0], [1674.0, 1925.0], [1742.0, 7133.0], [1734.0, 1866.0], [1778.0, 1853.0], [1746.0, 3372.0], [1754.0, 2659.0], [1758.0, 1857.0], [1766.0, 2443.0], [1762.0, 972.0], [1770.0, 1846.0], [1790.0, 2987.0], [1786.0, 4004.0], [1782.0, 943.0], [1798.0, 4892.0], [1822.0, 1499.0], [1818.0, 2644.3333333333335], [1794.0, 5126.0], [1802.0, 2437.0], [1806.0, 1831.0], [1842.0, 3305.0], [1846.0, 1360.5], [1826.0, 1804.0], [1830.0, 3311.0], [1834.0, 3641.0], [1838.0, 3623.0], [1850.0, 3276.0], [1810.0, 1818.0], [1814.0, 4556.0], [1862.0, 1779.0], [1866.0, 2839.5], [1858.0, 3878.0], [1918.0, 2108.5], [1914.0, 2983.0], [1910.0, 4878.0], [1906.0, 1757.0], [1874.0, 588.5], [1878.0, 1760.5], [1886.0, 2508.0], [1882.0, 4471.0], [1890.0, 2031.25], [1894.0, 4468.0], [1898.0, 3270.0], [1902.0, 1642.0], [1926.0, 2106.0], [1978.0, 2950.0], [1922.0, 2068.0], [1930.0, 4837.0], [1970.0, 2159.0], [1946.0, 4993.0], [1942.0, 3630.5], [1938.0, 4819.0], [1950.0, 2193.0], [1966.0, 1640.0], [1962.0, 4860.0], [1958.0, 4010.0], [1954.0, 2081.0], [1982.0, 1626.0], [1974.0, 2866.0], [1986.0, 1682.0], [1994.0, 1712.5], [2014.0, 4218.0], [2010.0, 1677.0], [2006.0, 1670.0], [2002.0, 4198.0], [2046.0, 2927.0], [2018.0, 737.0], [2022.0, 1658.0], [2026.0, 4204.0], [2030.0, 1586.0], [2042.0, 1655.0], [2038.0, 3056.0], [2034.0, 3171.0], [1998.0, 2492.0], [2148.0, 3277.25], [2100.0, 1188.227543265274], [2172.0, 1627.0], [2156.0, 9741.0], [2060.0, 4058.0], [2052.0, 1648.0], [2180.0, 3942.727272727273], [2188.0, 88.0], [2236.0, 2999.0], [2196.0, 148.0], [2300.0, 3495.0], [2244.0, 448.5], [2252.0, 3987.6666666666665], [2220.0, 1611.0], [2372.0, 97.0], [2332.0, 1584.0], [2404.0, 1577.0], [2364.0, 1522.0], [2324.0, 1922.0], [2356.0, 2838.0], [2532.0, 2839.4375], [2452.0, 3498.0], [2484.0, 2843.0], [2492.0, 4788.0], [2548.0, 12430.0], [2556.0, 1075.0], [2500.0, 1532.0], [2508.0, 1244.0], [2516.0, 19414.0], [2524.0, 1479.0], [2572.0, 1269.5], [2580.0, 2199.2], [2620.0, 145.0], [2596.0, 2462.6875000000005], [2604.0, 2848.0], [2668.0, 2263.4722222222217], [2676.0, 943.0], [2684.0, 2236.3333333333335], [2708.0, 1816.0], [2748.0, 304.0], [2700.0, 1437.498327448425], [2740.0, 12954.5], [2724.0, 1311.0], [2804.0, 1055.25], [2812.0, 208.79999999999998], [2716.0, 4637.0], [2764.0, 780.0], [2772.0, 5043.0], [2780.0, 2275.0], [2932.0, 3049.5], [2892.0, 2445.0], [2940.0, 2517.0], [2884.0, 780.0], [2900.0, 1856.8333333333333], [2908.0, 3543.0], [2916.0, 2956.0], [2868.0, 1992.4285714285713], [2860.0, 2587.0], [2852.0, 2997.0], [2948.0, 2850.0], [2956.0, 1662.0], [2972.0, 2890.5], [2996.0, 2016.0], [2980.0, 2013.0], [2165.0, 1623.0], [2141.0, 12.0], [2173.0, 47.0], [2133.0, 2759.0], [2093.0, 1625.0], [2053.0, 2584.0], [2253.0, 289.0], [2269.0, 1051.0], [2221.0, 4105.0], [2213.0, 709.0], [2405.0, 1574.0], [2429.0, 1073.5], [2309.0, 4145.0], [2453.0, 1912.0], [2445.0, 2176.0], [2437.0, 2924.0], [2485.0, 3142.5], [2461.0, 1521.0], [2541.0, 1692.0], [2533.0, 1737.0], [2501.0, 2048.6666666666665], [2517.0, 2927.0714285714284], [2509.0, 4588.0], [2525.0, 1629.3333333333333], [2581.0, 2299.0], [2565.0, 1092.0], [2621.0, 3058.0], [2613.0, 2320.7272727272725], [2597.0, 2141.0], [2661.0, 1958.7499999999998], [2653.0, 2884.0], [2629.0, 2625.0], [2677.0, 2587.0], [2717.0, 1843.0], [2701.0, 1184.0], [2693.0, 2602.3333333333335], [2709.0, 4771.0], [2789.0, 7521.666666666666], [2797.0, 709.0], [2813.0, 47.0], [2765.0, 530.5], [2773.0, 21351.0], [2781.0, 2942.0], [2941.0, 1371.0], [2885.0, 1923.0], [2893.0, 1417.5], [2901.0, 1843.0], [2909.0, 2562.0], [2925.0, 2995.5], [2917.0, 4191.0], [2877.0, 3603.0], [2861.0, 1873.0], [2853.0, 2674.3333333333335], [2997.0, 902.0], [2957.0, 8145.0], [2973.0, 1887.0], [2981.0, 3475.0], [1087.0, 3051.5], [1035.0, 1248.6666666666665], [1027.0, 3210.0], [1031.0, 1345.0], [1075.0, 571.5555555555555], [1039.0, 2144.0], [1083.0, 2319.0], [1043.0, 2671.0], [1051.0, 1337.0], [1047.0, 1447.0], [1055.0, 5520.0], [1059.0, 1614.8], [1063.0, 1275.0], [1071.0, 4573.0], [1067.0, 5647.0], [1147.0, 1613.5], [1095.0, 567.1428571428571], [1091.0, 1770.6666666666667], [1119.0, 5632.0], [1115.0, 5442.0], [1111.0, 2676.0], [1107.0, 4636.0], [1127.0, 2749.5], [1131.0, 3256.0], [1151.0, 4287.0], [1123.0, 4352.0], [1143.0, 1397.0], [1139.0, 4544.0], [1103.0, 4639.0], [1099.0, 5552.0], [1135.0, 4621.0], [1215.0, 2210.0], [1179.0, 1485.0], [1171.0, 1430.75], [1175.0, 5553.0], [1187.0, 317.25], [1191.0, 1720.0], [1195.0, 853.0], [1199.0, 2713.0], [1211.0, 5431.0], [1207.0, 1948.5], [1203.0, 4544.0], [1183.0, 5265.0], [1155.0, 4637.0], [1163.0, 4650.0], [1159.0, 5385.0], [1167.0, 4545.0], [1279.0, 4572.0], [1231.0, 1281.0], [1219.0, 2011.6666666666667], [1227.0, 5316.0], [1247.0, 5139.0], [1243.0, 2443.0], [1239.0, 5497.0], [1235.0, 2495.0], [1267.0, 1164.0], [1251.0, 475.0], [1255.0, 2859.5], [1275.0, 4572.0], [1271.0, 3742.0], [1263.0, 4622.0], [1259.0, 2543.0], [1339.0, 3386.5], [1299.0, 1419.5], [1303.0, 5237.0], [1307.0, 4378.0], [1323.0, 3285.5], [1319.0, 5438.0], [1315.0, 4349.0], [1343.0, 2503.0], [1331.0, 5348.0], [1295.0, 5247.0], [1291.0, 4583.0], [1287.0, 2163.0], [1311.0, 1254.0], [1283.0, 2166.0], [1327.0, 3884.0], [1347.0, 2133.0], [1351.0, 2751.0], [1375.0, 1224.0], [1371.0, 2142.0], [1367.0, 4359.0], [1363.0, 4342.0], [1399.0, 1181.0], [1407.0, 3125.5], [1379.0, 2113.0], [1383.0, 5320.0], [1387.0, 1133.0], [1391.0, 4333.0], [1403.0, 4357.0], [1395.0, 5152.0], [1359.0, 4508.0], [1355.0, 2127.0], [1415.0, 2671.0], [1411.0, 4173.0], [1439.0, 1113.0], [1435.0, 4301.0], [1431.0, 2080.0], [1427.0, 5173.0], [1419.0, 1450.25], [1459.0, 1050.0], [1463.0, 4272.0], [1467.0, 2536.75], [1455.0, 5346.0], [1451.0, 2070.0], [1447.0, 4365.0], [1443.0, 4306.0], [1471.0, 4498.0], [1483.0, 639.5], [1531.0, 4438.0], [1499.0, 1120.0], [1503.0, 4483.0], [1479.0, 1067.0], [1475.0, 4352.0], [1515.0, 3099.5], [1511.0, 4745.0], [1507.0, 5226.0], [1519.0, 5331.0], [1535.0, 5321.0], [1527.0, 2033.0], [1523.0, 2431.5], [1487.0, 4252.0], [1491.0, 4798.0], [1495.0, 10715.5], [1539.0, 1786.3333333333333], [1595.0, 1999.0], [1567.0, 4415.0], [1563.0, 3540.5], [1559.0, 4284.0], [1555.0, 4289.0], [1579.0, 1035.3333333333333], [1575.0, 4363.0], [1571.0, 2004.0], [1599.0, 4213.0], [1591.0, 4374.0], [1587.0, 1996.0], [1547.0, 1055.0], [1543.0, 4938.5], [1583.0, 4028.0], [1631.0, 1964.0], [1659.0, 1734.0], [1615.0, 1105.0], [1651.0, 4182.0], [1655.0, 4160.0], [1623.0, 2700.5], [1619.0, 4210.0], [1627.0, 1972.0], [1603.0, 4423.0], [1607.0, 5170.0], [1611.0, 5223.0], [1647.0, 2708.5], [1663.0, 326.0], [1643.0, 1948.0], [1639.0, 1751.0], [1635.0, 1974.0], [1667.0, 1032.0], [1719.0, 2960.0], [1671.0, 542.5], [1675.0, 5200.0], [1679.0, 1911.5], [1683.0, 2413.5], [1687.0, 4313.0], [1695.0, 4284.0], [1691.0, 4895.0], [1703.0, 3974.0], [1699.0, 4326.0], [1707.0, 4312.0], [1711.0, 1895.0], [1723.0, 1837.0], [1715.0, 4936.0], [1735.0, 4436.333333333333], [1731.0, 2161.0], [1739.0, 2829.6666666666665], [1755.0, 5177.0], [1779.0, 4294.0], [1747.0, 4063.0], [1751.0, 2254.5], [1791.0, 5072.0], [1763.0, 4088.0], [1767.0, 4311.0], [1771.0, 2441.0], [1775.0, 2508.5], [1787.0, 4291.0], [1783.0, 4595.0], [1799.0, 1138.4], [1803.0, 2666.0], [1819.0, 2344.0], [1823.0, 4510.0], [1795.0, 4935.0], [1807.0, 4893.0], [1843.0, 3303.0], [1847.0, 1796.0], [1851.0, 1023.0], [1855.0, 3130.5], [1827.0, 2877.0], [1831.0, 3257.0], [1835.0, 4885.0], [1839.0, 2209.5], [1815.0, 4262.0], [1811.0, 3555.0], [1863.0, 4866.0], [1859.0, 1789.0], [1867.0, 4356.0], [1871.0, 2911.0], [1887.0, 3589.0], [1883.0, 3525.0], [1879.0, 4255.0], [1875.0, 2703.5], [1891.0, 4220.0], [1895.0, 5035.0], [1899.0, 3461.0], [1903.0, 4249.0], [1915.0, 2094.0], [1911.0, 2232.0], [1907.0, 4845.0], [1923.0, 2023.0], [1979.0, 2541.0], [1931.0, 2197.0], [1927.0, 4003.0], [1951.0, 2095.0], [1947.0, 3995.0], [1943.0, 4995.0], [1939.0, 2049.0], [1935.0, 1830.0], [1967.0, 5101.5], [1963.0, 4824.0], [1959.0, 3861.0], [1955.0, 4988.0], [1983.0, 1678.0], [1971.0, 3994.0], [1999.0, 1717.5], [1987.0, 1923.75], [1991.0, 2084.0], [2015.0, 4206.0], [2011.0, 1666.0], [1995.0, 2632.0], [2019.0, 1896.5], [2023.0, 1661.0], [2027.0, 4197.0], [2047.0, 3071.0], [2043.0, 3024.0], [2039.0, 1667.0], [2035.0, 4051.0], [2158.0, 1000.0], [2062.0, 1629.0], [2054.0, 4169.0], [2206.0, 759.0], [2190.0, 10042.0], [2198.0, 1624.0], [2222.0, 1114.0], [2230.0, 4124.0], [2302.0, 1591.0], [2334.0, 1672.6666666666667], [2326.0, 1593.0], [2422.0, 4081.0], [2406.0, 2058.0], [2382.0, 2713.0], [2350.0, 2397.3333333333335], [2342.0, 4070.0], [2454.0, 1582.0], [2446.0, 1958.0], [2470.0, 1594.0], [2494.0, 2763.0], [2486.0, 2881.0], [2462.0, 2056.0], [2534.0, 2596.6666666666665], [2558.0, 959.0], [2502.0, 1779.0], [2518.0, 11071.5], [2526.0, 1704.0], [2582.0, 2549.0], [2670.0, 1760.6666666666667], [2622.0, 1403.6666666666665], [2598.0, 2353.0], [2614.0, 2570.066666666666], [2566.0, 1489.0], [2662.0, 2731.8], [2678.0, 1158.5], [2646.0, 4137.75], [2638.0, 6175.0], [2686.0, 2249.4210526315787], [2702.0, 893.5], [2694.0, 1122.0], [2750.0, 457.0], [2734.0, 17750.0], [2726.0, 2544.0], [2710.0, 1539.5], [2718.0, 1020.5], [2790.0, 3028.1428571428573], [2766.0, 650.0], [2782.0, 730.0], [2934.0, 1774.0], [2886.0, 3143.3333333333335], [2894.0, 1898.0], [2902.0, 1402.0], [2910.0, 1825.0], [2918.0, 3563.0], [2838.0, 1616.0], [2830.0, 1918.0], [2870.0, 1519.0], [2862.0, 3030.0], [2854.0, 1867.5], [2998.0, 4244.5], [2950.0, 2174.0], [2966.0, 3481.0], [2958.0, 1837.0], [2990.0, 3204.0], [2982.0, 2039.0], [2111.0, 335.5], [2119.0, 892.0], [2127.0, 27.0], [2135.0, 1632.0], [2055.0, 4149.0], [2199.0, 301.0], [2223.0, 2639.25], [2287.0, 1597.0], [2207.0, 1614.0], [2271.0, 3558.0], [2263.0, 1605.0], [2319.0, 4117.0], [2407.0, 78.0], [2359.0, 1069.0], [2351.0, 1816.0], [2423.0, 648.0], [2431.0, 1939.6666666666665], [2399.0, 1939.0], [2375.0, 4099.0], [2535.0, 2739.0], [2447.0, 1789.3333333333333], [2455.0, 4090.0], [2463.0, 3299.0], [2503.0, 335.0], [2511.0, 3032.0], [2519.0, 2738.0], [2527.0, 6705.0], [2583.0, 2482.4], [2575.0, 2350.0], [2615.0, 5811.0], [2623.0, 2664.0], [2607.0, 430.0], [2599.0, 2317.0], [2591.0, 2704.0], [2671.0, 757.0], [2679.0, 1107.3333333333333], [2687.0, 2755.125], [2631.0, 1444.0], [2647.0, 2128.0], [2655.0, 2880.0], [2711.0, 877.5], [2703.0, 1109.0], [2695.0, 2320.0], [2743.0, 2319.0], [2751.0, 1137.5], [2727.0, 6756.5], [2719.0, 616.0], [2791.0, 207.0], [2799.0, 22541.0], [2783.0, 683.0], [2943.0, 2463.5], [2935.0, 2368.0], [2895.0, 1457.5], [2887.0, 2081.0], [2903.0, 3531.0], [2911.0, 1875.0], [2927.0, 1960.0], [2879.0, 1500.0], [2847.0, 2113.3636363636365], [2839.0, 1589.0], [2871.0, 2006.0], [2855.0, 1490.0], [2999.0, 1580.0000000000002], [2959.0, 1389.0], [2967.0, 3710.0], [2975.0, 1881.0], [2983.0, 2045.0], [1.0, 15040.0]], "isOverall": false, "label": "Petición HTTP", "isController": false}, {"data": [[1978.8572385812329, 1911.554426502322]], "isOverall": false, "label": "Petición HTTP-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 80.0, "minX": 1.5497793E12, "maxY": 483352.65, "series": [{"data": [[1.54977942E12, 440075.5333333333], [1.54977936E12, 483352.65], [1.54977948E12, 243.68333333333334], [1.5497793E12, 110724.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.54977942E12, 144445.0], [1.54977936E12, 158650.0], [1.54977948E12, 80.0], [1.5497793E12, 36342.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54977948E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 395.23677512554264, "minX": 1.5497793E12, "maxY": 15958.03125, "series": [{"data": [[1.54977942E12, 3155.9200041538206], [1.54977936E12, 1118.8703435234752], [1.54977948E12, 15958.03125], [1.5497793E12, 395.23677512554264]], "isOverall": false, "label": "Petición HTTP", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54977948E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 395.2325789365068, "minX": 1.5497793E12, "maxY": 15958.03125, "series": [{"data": [[1.54977942E12, 3155.9186714666607], [1.54977936E12, 1118.866230696507], [1.54977948E12, 15958.03125], [1.5497793E12, 395.2325789365068]], "isOverall": false, "label": "Petición HTTP", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54977948E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.15625, "minX": 1.5497793E12, "maxY": 31.267091280418008, "series": [{"data": [[1.54977942E12, 31.267091280418008], [1.54977936E12, 11.453529782540182], [1.54977948E12, 0.15625], [1.5497793E12, 0.3705716447685241]], "isOverall": false, "label": "Petición HTTP", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54977948E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.5497793E12, "maxY": 92540.0, "series": [{"data": [[1.54977942E12, 92540.0], [1.54977936E12, 32381.0], [1.54977948E12, 16556.0], [1.5497793E12, 6309.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.54977942E12, 5.0], [1.54977936E12, 6.0], [1.54977948E12, 15035.0], [1.5497793E12, 7.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.54977942E12, 9210.900000000001], [1.54977936E12, 2153.9000000000015], [1.54977948E12, 9596.30000000001], [1.5497793E12, 700.2000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.54977942E12, 35538.50000000008], [1.54977936E12, 12159.960000000006], [1.54977948E12, 35538.50000000008], [1.5497793E12, 1962.619999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.54977942E12, 17283.800000000003], [1.54977936E12, 4715.1500000000415], [1.54977948E12, 17283.800000000003], [1.5497793E12, 889.0999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54977948E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 315.0, "minX": 0.0, "maxY": 16357.0, "series": [{"data": [[1057.0, 666.0], [0.0, 16357.0], [242.0, 315.0], [962.0, 1837.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1057.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 315.0, "minX": 0.0, "maxY": 16357.0, "series": [{"data": [[1057.0, 666.0], [0.0, 16357.0], [242.0, 315.0], [962.0, 1837.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1057.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 252.28333333333333, "minX": 1.5497793E12, "maxY": 1087.6666666666667, "series": [{"data": [[1.54977942E12, 923.5], [1.54977936E12, 1087.6666666666667], [1.5497793E12, 252.28333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54977942E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.5497793E12, "maxY": 1057.6666666666667, "series": [{"data": [[1.54977942E12, 962.9666666666667], [1.54977936E12, 1057.6666666666667], [1.54977948E12, 0.5333333333333333], [1.5497793E12, 242.28333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.54977948E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.5497793E12, "maxY": 1057.6666666666667, "series": [{"data": [[1.54977942E12, 962.9666666666667], [1.54977936E12, 1057.6666666666667], [1.54977948E12, 0.5333333333333333], [1.5497793E12, 242.28333333333333]], "isOverall": false, "label": "Petición HTTP-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.54977948E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
